
sh2cb.a2.elf:	file format elf32-mos

Disassembly of section .text:

00006004 <_start>:
; {
    6004: 85 f0        	sta	$f0
    6006: a5 f4        	lda	$f4
    6008: 48           	pha
    6009: a5 f5        	lda	$f5
    600b: 48           	pha
    600c: a5 f6        	lda	$f6
    600e: 48           	pha
    600f: a5 f7        	lda	$f7
    6011: 48           	pha
    6012: a5 f0        	lda	$f0
    6014: a0 02        	ldy	#$2
    6016: 84 f7        	sty	$f7
    6018: 86 f5        	stx	$f5
;   endLocation = end;
    601a: 8e a9 77     	stx	$77a9
    601d: 85 f6        	sta	$f6
;   CardLocation start = Game::instance.GetCardLocation(card);
    601f: 20 60 6b     	jsr	$6b60
    6022: 85 f4        	sta	$f4
;   Game::instance.SetCard(start, Card());
    6024: a2 00        	ldx	#$0
    6026: 20 1e 6c     	jsr	$6c1e
    6029: a5 f4        	lda	$f4
;   currentX = start.GetX();
    602b: 20 46 62     	jsr	$6246
    602e: 8d aa 77     	sta	$77aa
    6031: a4 f4        	ldy	$f4
;   bool IsTower() const { return locationNumber > 251; }
    6033: c0 fc        	cpy	#$fc
    6035: a2 02        	ldx	#$2
    6037: b0 10        	bcs	$6049
;   bool IsAce() const { return locationNumber < 5; }
    6039: c0 05        	cpy	#$5
    603b: a2 02        	ldx	#$2
    603d: 90 0a        	bcc	$6049
    603f: a5 f4        	lda	$f4
;   return locationNumber & 0x0F;
    6041: 29 0f        	and	#$f
    6043: aa           	tax
;   inline uint8_t Y(uint8_t index) const { return y[index]; }
    6044: bd 81 73     	lda	$7381,x
    6047: aa           	tax
;     return columnYLookup.Y(GetRow());
    6048: ca           	dex
;   currentY = start.GetY() - CardLocations::CardShadowHeight;
    6049: 8e ab 77     	stx	$77ab
    604c: a5 f5        	lda	$f5
;   targetX = end.GetX();
    604e: 20 46 62     	jsr	$6246
    6051: 85 e3        	sta	$e3
    6053: a5 f5        	lda	$f5
    6055: a6 e3        	ldx	$e3
;   targetX = end.GetX();
    6057: 8e ac 77     	stx	$77ac
;   bool IsTower() const { return locationNumber > 251; }
    605a: c9 fc        	cmp	#$fc
    605c: 90 05        	bcc	$6063
    605e: a6 f7        	ldx	$f7
    6060: 4c 73 60     	jmp	$6073
;   bool IsAce() const { return locationNumber < 5; }
    6063: c9 05        	cmp	#$5
    6065: a6 f7        	ldx	$f7
    6067: 86 e2        	stx	$e2
    6069: 90 0a        	bcc	$6075
;   return locationNumber & 0x0F;
    606b: 29 0f        	and	#$f
    606d: aa           	tax
;   inline uint8_t Y(uint8_t index) const { return y[index]; }
    606e: bd 81 73     	lda	$7381,x
    6071: aa           	tax
;     return columnYLookup.Y(GetRow());
    6072: ca           	dex
    6073: 86 e2        	stx	$e2
    6075: a6 e2        	ldx	$e2
;   targetY = end.GetY() - CardLocations::CardShadowHeight;
    6077: 8e ad 77     	stx	$77ad
;   if (targetX > currentX) {
    607a: ad aa 77     	lda	$77aa
    607d: c5 e3        	cmp	$e3
    607f: 90 08        	bcc	$6089
    6081: 38           	sec
    6082: e5 e3        	sbc	$e3
    6084: a2 ff        	ldx	#$ff
    6086: 4c 92 60     	jmp	$6092
    6089: 85 e4        	sta	$e4
    608b: a5 e3        	lda	$e3
;   if (targetX > currentX) {
    608d: 38           	sec
    608e: e5 e4        	sbc	$e4
    6090: a2 01        	ldx	#$1
    6092: a8           	tay
;     distanceX = targetX - currentX;
    6093: 8d ae 77     	sta	$77ae
;     directionX = 1;
    6096: 8e b0 77     	stx	$77b0
;   if (targetY > currentY) {
    6099: ad ab 77     	lda	$77ab
    609c: c5 e2        	cmp	$e2
    609e: 90 08        	bcc	$60a8
    60a0: 38           	sec
    60a1: e5 e2        	sbc	$e2
    60a3: a2 ff        	ldx	#$ff
    60a5: 4c b1 60     	jmp	$60b1
    60a8: 85 e3        	sta	$e3
    60aa: a5 e2        	lda	$e2
;   if (targetY > currentY) {
    60ac: 38           	sec
    60ad: e5 e3        	sbc	$e3
    60af: a2 01        	ldx	#$1
;     distanceY = targetY - currentY;
    60b1: 8d af 77     	sta	$77af
;     directionY = 1;
    60b4: 8e b1 77     	stx	$77b1
;     (dy >> 1);
    60b7: 4a           	lsr
    60b8: 85 f5        	sta	$f5
    60ba: 98           	tya
;     (dx >> 1) +
    60bb: 4a           	lsr
    60bc: 85 f7        	sta	$f7
    60be: a2 03        	ldx	#$3
    60c0: 98           	tya
;     dx +
    60c1: 20 f3 72     	jsr	$72f3
;     dx +
    60c4: 18           	clc
    60c5: 65 f7        	adc	$f7
    60c7: 18           	clc
;     dx +
    60c8: 65 f5        	adc	$f5
;   duration = pixelDistance >> 4;
    60ca: 4a           	lsr
    60cb: 4a           	lsr
    60cc: 4a           	lsr
    60cd: 4a           	lsr
    60ce: 8d b5 77     	sta	$77b5
;   timeLeft = duration;
    60d1: 8d b6 77     	sta	$77b6
    60d4: a2 00        	ldx	#$0
;   numeratorX = numeratorY = 0;
    60d6: 8e b3 77     	stx	$77b3
    60d9: 8e b2 77     	stx	$77b2
;       static uint8_t GetCounter() { return counter; }
    60dc: ae 6b 76     	ldx	$766b
;   lastVBLCount = a2::VBLCounter::GetCounter();
    60df: 8e b4 77     	stx	$77b4
    60e2: a6 f6        	ldx	$f6
;   cardToMove = card;
    60e4: 8e a8 77     	stx	$77a8
    60e7: 86 f5        	stx	$f5
    60e9: a2 67        	ldx	#$67
    60eb: 86 f6        	stx	$f6
    60ed: a2 76        	ldx	#$76
    60ef: 86 f7        	stx	$f7
    60f1: a4 f6        	ldy	$f6
    60f3: 84 e2        	sty	$e2
    60f5: 86 e3        	stx	$e3
    60f7: a5 f4        	lda	$f4
;   drawing2.EraseCard(start);
    60f9: 20 02 69     	jsr	$6902
;   background2X = currentX;
    60fc: ad aa 77     	lda	$77aa
    60ff: 8d 1d 77     	sta	$771d
;   background2Y = currentY;
    6102: ae ab 77     	ldx	$77ab
    6105: 8e 1e 77     	stx	$771e
    6108: a4 f6        	ldy	$f6
    610a: 84 e2        	sty	$e2
    610c: a4 f7        	ldy	$f7
    610e: 84 e3        	sty	$e3
    6110: a0 20        	ldy	#$20
    6112: 84 e4        	sty	$e4
    6114: a0 77        	ldy	#$77
    6116: 84 e5        	sty	$e5
;   drawing2.SaveCardBackground(currentX, currentY, &background2);
    6118: 20 a2 69     	jsr	$69a2
    611b: a2 01        	ldx	#$1
;   background2Saved = true;
    611d: 8e 1f 77     	stx	$771f
;   drawing2.DrawCardWithShadow(card, currentX, currentY);
    6120: ae ab 77     	ldx	$77ab
    6123: 86 e4        	stx	$e4
;          return lo[index];
    6125: a9 51        	lda	#$51
    6127: 18           	clc
    6128: 65 e4        	adc	$e4
    612a: 85 e2        	sta	$e2
    612c: a9 74        	lda	#$74
    612e: 69 00        	adc	#$0
    6130: 85 e3        	sta	$e3
    6132: a0 00        	ldy	#$0
    6134: b1 e2        	lda	($e2),y
;     dx +
    6136: 18           	clc
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    6137: 6d aa 77     	adc	$77aa
    613a: 85 e6        	sta	$e6
    613c: a9 91        	lda	#$91
    613e: 18           	clc
;          return hi[index];
    613f: 65 e4        	adc	$e4
    6141: 85 e2        	sta	$e2
    6143: a9 73        	lda	#$73
    6145: 69 00        	adc	#$0
    6147: 85 e3        	sta	$e3
;   drawing2.DrawCardWithShadow(card, currentX, currentY);
    6149: ae aa 77     	ldx	$77aa
;          return hi[index];
    614c: b1 e2        	lda	($e2),y
    614e: 18           	clc
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    614f: 6d 67 76     	adc	$7667
    6152: 85 e7        	sta	$e7
    6154: 98           	tya
;     row[1] = 0;
    6155: 91 e6        	sta	($e6),y
    6157: c8           	iny
    6158: 91 e6        	sta	($e6),y
    615a: a0 03        	ldy	#$3
    615c: 91 e6        	sta	($e6),y
;     uint8_t *row = hgr.GetByteAddress(y++, x);
    615e: e6 e4        	inc	$e4
    6160: 88           	dey
;     row[1] = 0;
    6161: 91 e6        	sta	($e6),y
    6163: a4 f6        	ldy	$f6
    6165: 84 e2        	sty	$e2
    6167: a4 f7        	ldy	$f7
    6169: 84 e3        	sty	$e3
    616b: a5 f5        	lda	$f5
;   DrawCard(card, x, y);
    616d: 20 6a 66     	jsr	$666a
;       asm volatile ("STA\t$C055" : );
    6170: 8d 55 c0     	sta	$c055
    6173: a2 68        	ldx	#$68
    6175: 86 e2        	stx	$e2
    6177: a2 76        	ldx	#$76
    6179: 86 e3        	stx	$e3
    617b: a5 f4        	lda	$f4
;   drawing1.EraseCard(start);
    617d: 20 02 69     	jsr	$6902
    6180: a0 00        	ldy	#$0
;   background1Saved = false;
    6182: 8c 94 76     	sty	$7694
    6185: a2 02        	ldx	#$2
;   state = State::Page2Visible;
    6187: 8e 90 76     	stx	$7690
    618a: 8c 91 76     	sty	$7691
    618d: 68           	pla
    618e: 85 f7        	sta	$f7
    6190: 68           	pla
    6191: 85 f6        	sta	$f6
    6193: 68           	pla
    6194: 85 f5        	sta	$f5
    6196: 68           	pla
    6197: 85 f4        	sta	$f4
; }
    6199: 60           	rts

0000619a <_ZN12CardAnimator14UpdatePositionEv>:
;   if (timeLeft == 0)
    619a: ae b6 77     	ldx	$77b6
    619d: d0 03        	bne	$61a2
    619f: 4c 45 62     	jmp	$6245
;       static uint8_t GetCounter() { return counter; }
    61a2: ac 6b 76     	ldy	$766b
    61a5: 84 e2        	sty	$e2
    61a7: ac b4 77     	ldy	$77b4
    61aa: ad ae 77     	lda	$77ae
    61ad: 85 e3        	sta	$e3
    61af: ad b5 77     	lda	$77b5
    61b2: 85 e4        	sta	$e4
    61b4: ad b0 77     	lda	$77b0
    61b7: 85 e5        	sta	$e5
    61b9: ad af 77     	lda	$77af
    61bc: 85 e6        	sta	$e6
    61be: ad b1 77     	lda	$77b1
    61c1: 85 e7        	sta	$e7
    61c3: ad b2 77     	lda	$77b2
    61c6: 85 e8        	sta	$e8
    61c8: ad b3 77     	lda	$77b3
    61cb: 85 ec        	sta	$ec
    61cd: 86 e9        	stx	$e9
    61cf: ae aa 77     	ldx	$77aa
    61d2: 86 ea        	stx	$ea
    61d4: a6 e9        	ldx	$e9
    61d6: ad ab 77     	lda	$77ab
    61d9: 85 eb        	sta	$eb
    61db: a5 ec        	lda	$ec
;   while (lastVBLCount != now) {
    61dd: c4 e2        	cpy	$e2
    61df: d0 03        	bne	$61e4
    61e1: 4c 45 62     	jmp	$6245
    61e4: 85 e9        	sta	$e9
    61e6: a5 e8        	lda	$e8
    61e8: 18           	clc
;     numeratorX += distanceX;
    61e9: 65 e3        	adc	$e3
    61eb: 85 e8        	sta	$e8
;     while (numeratorX >= duration) {
    61ed: c5 e4        	cmp	$e4
    61ef: 90 1b        	bcc	$620c
    61f1: a5 e8        	lda	$e8
    61f3: 85 e8        	sta	$e8
    61f5: a5 ea        	lda	$ea
    61f7: 18           	clc
;       currentX += directionX;
    61f8: 65 e5        	adc	$e5
    61fa: 85 ea        	sta	$ea
    61fc: a5 e8        	lda	$e8
;       numeratorX -= duration;
    61fe: 38           	sec
    61ff: e5 e4        	sbc	$e4
;     while (numeratorX >= duration) {
    6201: c5 e4        	cmp	$e4
    6203: b0 ee        	bcs	$61f3
    6205: 85 e8        	sta	$e8
    6207: a5 ea        	lda	$ea
;       currentX += directionX;
    6209: 8d aa 77     	sta	$77aa
    620c: a5 e8        	lda	$e8
    620e: 8d b2 77     	sta	$77b2
    6211: 18           	clc
    6212: a5 e9        	lda	$e9
;     numeratorY += distanceY;
    6214: 65 e6        	adc	$e6
;     while (numeratorY >= duration) {
    6216: c5 e4        	cmp	$e4
    6218: 90 1b        	bcc	$6235
    621a: 84 ec        	sty	$ec
    621c: a4 eb        	ldy	$eb
    621e: 85 e9        	sta	$e9
    6220: 98           	tya
    6221: 18           	clc
;       currentY += directionY;
    6222: 65 e7        	adc	$e7
    6224: a8           	tay
    6225: a5 e9        	lda	$e9
;       numeratorY -= duration;
    6227: 38           	sec
    6228: e5 e4        	sbc	$e4
;     while (numeratorY >= duration) {
    622a: c5 e4        	cmp	$e4
    622c: b0 f0        	bcs	$621e
    622e: 84 eb        	sty	$eb
;       currentY += directionY;
    6230: 8c ab 77     	sty	$77ab
    6233: a4 ec        	ldy	$ec
    6235: 8d b3 77     	sta	$77b3
;     ++lastVBLCount;
    6238: c8           	iny
    6239: 8c b4 77     	sty	$77b4
;     if (--timeLeft == 0)
    623c: ca           	dex
    623d: 8e b6 77     	stx	$77b6
    6240: f0 03        	beq	$6245
    6242: 4c dd 61     	jmp	$61dd
; }
    6245: 60           	rts

00006246 <_ZNK12CardLocation4GetXEv>:
;   bool IsAce() const { return locationNumber < 5; }
    6246: c9 05        	cmp	#$5
    6248: b0 0c        	bcs	$6256
;     switch (GetAceSuit()) {
    624a: 18           	clc
    624b: 69 ff        	adc	#$ff
    624d: c9 04        	cmp	#$4
    624f: b0 1a        	bcs	$626b
    6251: aa           	tax
;     switch (GetAceSuit()) {
    6252: bd 7d 73     	lda	$737d,x
; }
    6255: 60           	rts
;   bool IsTower() const { return locationNumber > 251; }
    6256: c9 fc        	cmp	#$fc
    6258: 90 09        	bcc	$6263
;   static constexpr uint8_t GetColumnX(uint8_t column) { return column << 2; }
    625a: a2 fc        	ldx	#$fc
    625c: 20 f3 72     	jsr	$72f3
    625f: 18           	clc
    6260: 69 08        	adc	#$8
; }
    6262: 60           	rts
;   static constexpr uint8_t GetColumnX(uint8_t column) { return column << 2; }
    6263: 4a           	lsr
    6264: 4a           	lsr
    6265: 29 3c        	and	#$3c
    6267: 18           	clc
    6268: 69 fc        	adc	#$fc
; }
    626a: 60           	rts
    626b: a2 01        	ldx	#$1
    626d: a9 43        	lda	#$43
;       asm volatile ("JSR\t$FDED" : "+a"(c));
    626f: 20 ed fd     	jsr	$fded
;       while (*s)
    6272: bd 61 73     	lda	$7361,x
    6275: e8           	inx
    6276: e0 1c        	cpx	#$1c
    6278: d0 f5        	bne	$626f
;       asm volatile ("STA\t$C054" : );
    627a: 8d 54 c0     	sta	$c054
;       asm volatile ("JMP\t$FF69" :::);
    627d: 4c 69 ff     	jmp	$ff69

00006280 <_ZNK6Column7GetCardEh>:
; CompactCard Column::GetCard(uint8_t index) const {
    6280: 85 e4        	sta	$e4
    6282: a0 05        	ldy	#$5
;   if (index >= count)
    6284: d1 e2        	cmp	($e2),y
    6286: a9 00        	lda	#$0
    6288: 90 03        	bcc	$628d
    628a: 4c f7 62     	jmp	$62f7
    628d: a4 e4        	ldy	$e4
;   if (index < 5)
    628f: c0 05        	cpy	#$5
    6291: b0 03        	bcs	$6296
;     return cards[index];
    6293: b1 e2        	lda	($e2),y
; }
    6295: 60           	rts
    6296: 84 e4        	sty	$e4
    6298: a0 04        	ldy	#$4
    629a: 98           	tya
;   return r + (-i);
    629b: 38           	sec
    629c: e5 e4        	sbc	$e4
    629e: 85 e4        	sta	$e4
;   result.rank = (Rank)card.parts.rank;
    62a0: b1 e2        	lda	($e2),y
    62a2: a8           	tay
    62a3: 29 0f        	and	#$f
    62a5: a6 e4        	ldx	$e4
    62a7: 10 07        	bpl	$62b0
    62a9: 85 e3        	sta	$e3
    62ab: a2 ff        	ldx	#$ff
    62ad: 4c b4 62     	jmp	$62b4
    62b0: 85 e3        	sta	$e3
    62b2: a2 00        	ldx	#$0
    62b4: 86 e2        	stx	$e2
    62b6: 98           	tya
    62b7: 29 30        	and	#$30
    62b9: aa           	tax
    62ba: 18           	clc
    62bb: a5 e3        	lda	$e3
;   r = (Rank)((uint8_t)r + i);
    62bd: 65 e4        	adc	$e4
    62bf: a8           	tay
    62c0: a9 00        	lda	#$0
    62c2: 65 e2        	adc	$e2
    62c4: 85 e2        	sta	$e2
    62c6: 98           	tya
;   if (r<Rank::Ace || r>Rank::King)
    62c7: c0 01        	cpy	#$1
    62c9: a5 e2        	lda	$e2
    62cb: 85 e3        	sta	$e3
    62cd: e9 00        	sbc	#$0
    62cf: 85 e4        	sta	$e4
    62d1: 50 06        	bvc	$62d9
    62d3: a5 e4        	lda	$e4
;   if (r<Rank::Ace || r>Rank::King)
    62d5: 49 80        	eor	#$80
    62d7: 85 e4        	sta	$e4
    62d9: 98           	tya
    62da: 86 e2        	stx	$e2
    62dc: a6 e4        	ldx	$e4
    62de: 30 11        	bmi	$62f1
    62e0: a6 e3        	ldx	$e3
    62e2: d0 07        	bne	$62eb
;   if (r<Rank::Ace || r>Rank::King)
    62e4: c9 0e        	cmp	#$e
    62e6: b0 09        	bcs	$62f1
    62e8: 4c f3 62     	jmp	$62f3
    62eb: a6 e3        	ldx	$e3
    62ed: e0 00        	cpx	#$0
    62ef: 90 02        	bcc	$62f3
    62f1: a9 00        	lda	#$0
;   card.parts.rank = (uint8_t)_card.rank;
    62f3: 29 0f        	and	#$f
;   card.parts.suit = (uint8_t)_card.suit;
    62f5: 05 e2        	ora	$e2
; }
    62f7: 60           	rts

000062f8 <_ZN6Cursor11SetLocationE12CardLocation>:
;   switch (state) {
    62f8: ae b7 77     	ldx	$77b7
    62fb: ac b8 77     	ldy	$77b8
    62fe: d0 04        	bne	$6304
    6300: e0 02        	cpx	#$2
    6302: f0 20        	beq	$6324
    6304: c0 00        	cpy	#$0
    6306: d0 14        	bne	$631c
;   switch (state) {
    6308: e0 01        	cpx	#$1
    630a: d0 10        	bne	$631c
    630c: 8d 44 78     	sta	$7844
;     Toggle();
    630f: 20 28 63     	jsr	$6328
    6312: ae 44 78     	ldx	$7844
;     this->location = location;
    6315: 8e ba 77     	stx	$77ba
;     Toggle();
    6318: 20 28 63     	jsr	$6328
; }
    631b: 60           	rts
    631c: c0 00        	cpy	#$0
    631e: d0 fb        	bne	$631b
    6320: e0 00        	cpx	#$0
    6322: d0 f7        	bne	$631b
;     this->location = location;
    6324: 8d ba 77     	sta	$77ba
; }
    6327: 60           	rts

00006328 <_ZN6Cursor6ToggleEv>:
;   bool IsNull() const { return locationNumber == 0; }
    6328: ad ba 77     	lda	$77ba
    632b: d0 03        	bne	$6330
    632d: 4c 80 63     	jmp	$6380
    6330: a2 03        	ldx	#$3
    6332: 8e 42 78     	stx	$7842
;       static uint8_t GetCounter() { return counter; }
    6335: ae 6b 76     	ldx	$766b
;   lastToggleTime = a2::VBLCounter::GetCounter();
    6338: 8e b9 77     	stx	$77b9
;   drawing1.ToggleCursor(location.GetX(), location.GetY());
    633b: 20 46 62     	jsr	$6246
    633e: a8           	tay
;   bool IsTower() const { return locationNumber > 251; }
    633f: ad ba 77     	lda	$77ba
    6342: c9 fc        	cmp	#$fc
    6344: b0 0e        	bcs	$6354
;   bool IsAce() const { return locationNumber < 5; }
    6346: c9 05        	cmp	#$5
    6348: 90 0a        	bcc	$6354
;   return locationNumber & 0x0F;
    634a: 29 0f        	and	#$f
    634c: aa           	tax
;   inline uint8_t Y(uint8_t index) const { return y[index]; }
    634d: bd 81 73     	lda	$7381,x
    6350: aa           	tax
    6351: 8e 42 78     	stx	$7842
    6354: a2 43        	ldx	#$43
    6356: 86 e2        	stx	$e2
    6358: a2 76        	ldx	#$76
    635a: 86 e3        	stx	$e3
    635c: 98           	tya
    635d: aa           	tax
    635e: 8d 43 78     	sta	$7843
    6361: ac 42 78     	ldy	$7842
    6364: 8c 42 78     	sty	$7842
    6367: 98           	tya
;   XorSprite(Sprites::cursorLeft, CardTopSpriteHeight, y, x);
    6368: 20 44 65     	jsr	$6544
;   XorSprite(Sprites::cursorRight, CardTopSpriteHeight, y, x + 2);
    636b: 18           	clc
    636c: ad 43 78     	lda	$7843
    636f: 69 02        	adc	#$2
    6371: a2 55        	ldx	#$55
    6373: 86 e2        	stx	$e2
    6375: a2 76        	ldx	#$76
    6377: 86 e3        	stx	$e3
    6379: aa           	tax
    637a: ad 42 78     	lda	$7842
;   XorSprite(Sprites::cursorRight, CardTopSpriteHeight, y, x + 2);
    637d: 20 44 65     	jsr	$6544
; }
    6380: 60           	rts
    6381: 00           	brk

00006382 <_ZN6Cursor22GetClosestColumnCardToE12CardLocation>:
; CardLocation Cursor::GetClosestColumnCardTo(CardLocation start) {
    6382: 85 f0        	sta	$f0
    6384: a5 f4        	lda	$f4
    6386: 48           	pha
    6387: a5 f5        	lda	$f5
    6389: 48           	pha
    638a: a5 f6        	lda	$f6
    638c: 48           	pha
    638d: a5 f7        	lda	$f7
    638f: 48           	pha
    6390: a5 f0        	lda	$f0
    6392: a6 f8        	ldx	$f8
    6394: 8e 7f 78     	stx	$787f
    6397: 85 e2        	sta	$e2
    6399: aa           	tax
;   bool IsColumn() const { return locationNumber>=5 && locationNumber <=251; }
    639a: c9 fc        	cmp	#$fc
    639c: a2 01        	ldx	#$1
    639e: b0 02        	bcs	$63a2
    63a0: a2 00        	ldx	#$0
    63a2: 86 e3        	stx	$e3
;   if (start.IsColumn()) {
    63a4: 4a           	lsr
    63a5: 4a           	lsr
    63a6: 4a           	lsr
    63a7: 4a           	lsr
    63a8: 18           	clc
    63a9: 69 ff        	adc	#$ff
    63ab: a6 e3        	ldx	$e3
    63ad: d0 0b        	bne	$63ba
    63af: aa           	tax
    63b0: a5 e2        	lda	$e2
    63b2: 29 0f        	and	#$f
    63b4: 85 f7        	sta	$f7
    63b6: 8a           	txa
    63b7: 4c c3 63     	jmp	$63c3
    63ba: a9 02        	lda	#$2
    63bc: 38           	sec
    63bd: e5 e2        	sbc	$e2
    63bf: a2 00        	ldx	#$0
    63c1: 86 f7        	stx	$f7
    63c3: a2 0a        	ldx	#$a
    63c5: 85 f4        	sta	$f4
    63c7: 86 f8        	stx	$f8
    63c9: a6 f7        	ldx	$f7
    63cb: 86 f6        	stx	$f6
    63cd: a6 f7        	ldx	$f7
    63cf: 85 f5        	sta	$f5
;     result = GetClosestCardOnColumn(startColumn + i, startIndex);
    63d1: 20 5c 64     	jsr	$645c
    63d4: aa           	tax
    63d5: d0 18        	bne	$63ef
    63d7: a6 f6        	ldx	$f6
    63d9: a5 f4        	lda	$f4
;     result = GetClosestCardOnColumn(startColumn - i, startIndex);
    63db: 20 5c 64     	jsr	$645c
    63de: aa           	tax
    63df: d0 0e        	bne	$63ef
;   for (uint8_t i=0; i<10; ++i) {
    63e1: c6 f4        	dec	$f4
    63e3: a5 f5        	lda	$f5
;   for (uint8_t i=0; i<10; ++i) {
    63e5: 18           	clc
    63e6: 69 01        	adc	#$1
    63e8: a6 f8        	ldx	$f8
    63ea: ca           	dex
    63eb: d0 da        	bne	$63c7
    63ed: a9 00        	lda	#$0
    63ef: 85 f0        	sta	$f0
    63f1: ae 7f 78     	ldx	$787f
    63f4: 86 f8        	stx	$f8
    63f6: 68           	pla
    63f7: 85 f7        	sta	$f7
    63f9: 68           	pla
    63fa: 85 f6        	sta	$f6
    63fc: 68           	pla
    63fd: 85 f5        	sta	$f5
    63ff: 68           	pla
    6400: 85 f4        	sta	$f4
    6402: a5 f0        	lda	$f0
; }
    6404: 60           	rts
    6405: 00           	brk

00006406 <_ZN6Cursor21GetClosestTowerCardToE12CardLocation>:
;   bool IsColumn() const { return locationNumber>=5 && locationNumber <=251; }
    6406: c9 fc        	cmp	#$fc
    6408: b0 17        	bcs	$6421
    640a: a0 00        	ldy	#$0
;     if ((int8_t)startTower < 0)
    640c: c9 40        	cmp	#$40
    640e: 90 14        	bcc	$6424
;   return (locationNumber>>4) - 1;
    6410: 4a           	lsr
    6411: 4a           	lsr
    6412: 4a           	lsr
    6413: 4a           	lsr
;     startTower = start.GetColumn() - 3;
    6414: 18           	clc
    6415: 69 fc        	adc	#$fc
;     if (startTower > 3)
    6417: c9 04        	cmp	#$4
    6419: a8           	tay
    641a: 90 08        	bcc	$6424
    641c: a0 03        	ldy	#$3
    641e: 4c 24 64     	jmp	$6424
;   uint8_t GetTowerIndex() const { return locationNumber ^ 0xFF; }
    6421: 49 ff        	eor	#$ff
    6423: a8           	tay
    6424: a2 04        	ldx	#$4
    6426: 84 e3        	sty	$e3
;   if (tower < 4)
    6428: c0 04        	cpy	#$4
    642a: 84 e2        	sty	$e2
    642c: b0 09        	bcs	$6437
    642e: a4 e2        	ldy	$e2
;   bool IsNull() const { return card.parts.rank == 0; }
    6430: a9 0f        	lda	#$f
    6432: 39 f3 77     	and	$77f3,y
    6435: d0 1b        	bne	$6452
    6437: a4 e3        	ldy	$e3
;   if (tower < 4)
    6439: c0 04        	cpy	#$4
    643b: b0 0a        	bcs	$6447
    643d: a4 e3        	ldy	$e3
;   bool IsNull() const { return card.parts.rank == 0; }
    643f: a9 0f        	lda	#$f
    6441: 39 f3 77     	and	$77f3,y
    6444: a8           	tay
    6445: d0 10        	bne	$6457
;   for (uint8_t i=0; i<4; ++i) {
    6447: c6 e3        	dec	$e3
    6449: a4 e2        	ldy	$e2
;   for (uint8_t i=0; i<4; ++i) {
    644b: c8           	iny
    644c: ca           	dex
    644d: d0 d9        	bne	$6428
    644f: a9 00        	lda	#$0
; }
    6451: 60           	rts
    6452: a5 e2        	lda	$e2
    6454: 4c 59 64     	jmp	$6459
    6457: a5 e3        	lda	$e3
    6459: 49 ff        	eor	#$ff
; }
    645b: 60           	rts

0000645c <_ZN6Cursor22GetClosestCardOnColumnEhh>:
; CardLocation Cursor::GetClosestCardOnColumn(uint8_t column, uint8_t startIndex) {
    645c: a0 00        	ldy	#$0
;   if (column < 10) {
    645e: c9 0a        	cmp	#$a
    6460: 90 03        	bcc	$6465
    6462: 4c ce 64     	jmp	$64ce
    6465: 8e 80 78     	stx	$7880
    6468: a2 00        	ldx	#$0
    646a: a0 06        	ldy	#$6
    646c: 84 e2        	sty	$e2
    646e: 86 e3        	stx	$e3
;   uint8_t GetCount() const { return count; }
    6470: a2 00        	ldx	#$0
    6472: 8d 81 78     	sta	$7881
;   uint8_t GetCount() const { return count; }
    6475: 20 19 73     	jsr	$7319
    6478: 85 e2        	sta	$e2
    647a: 86 e3        	stx	$e3
    647c: 18           	clc
;   uint8_t GetCount() const { return count; }
    647d: a9 f7        	lda	#$f7
    647f: 65 e2        	adc	$e2
    6481: 85 e2        	sta	$e2
    6483: a9 77        	lda	#$77
    6485: 65 e3        	adc	$e3
    6487: 85 e3        	sta	$e3
    6489: a0 05        	ldy	#$5
    648b: b1 e2        	lda	($e2),y
    648d: 38           	sec
    648e: 85 e3        	sta	$e3
;   if (row > 0)
    6490: e9 01        	sbc	#$1
    6492: 50 02        	bvc	$6496
    6494: 49 80        	eor	#$80
    6496: ae 80 78     	ldx	$7880
    6499: 86 e2        	stx	$e2
    649b: a0 00        	ldy	#$0
    649d: aa           	tax
    649e: 30 14        	bmi	$64b4
;     return CardLocation::Column(column, row - 1);
    64a0: c6 e3        	dec	$e3
    64a2: ae 81 78     	ldx	$7881
    64a5: 86 e4        	stx	$e4
    64a7: 8a           	txa
;   return CardLocation(((column + 1) << 4) | row);
    64a8: 0a           	asl
    64a9: 0a           	asl
    64aa: 0a           	asl
    64ab: 0a           	asl
    64ac: 18           	clc
    64ad: 69 10        	adc	#$10
    64af: 05 e3        	ora	$e3
    64b1: 4c b6 64     	jmp	$64b6
    64b4: a9 00        	lda	#$0
    64b6: aa           	tax
    64b7: f0 15        	beq	$64ce
    64b9: aa           	tax
;   return locationNumber & 0x0F;
    64ba: 29 0f        	and	#$f
;       if (bottomCard.GetRow() < startIndex) {
    64bc: c5 e2        	cmp	$e2
    64be: 8a           	txa
    64bf: 90 0c        	bcc	$64cd
    64c1: ad 81 78     	lda	$7881
;       if (bottomCard.GetRow() < startIndex) {
    64c4: 0a           	asl
    64c5: 0a           	asl
    64c6: 0a           	asl
    64c7: 0a           	asl
    64c8: 18           	clc
    64c9: 69 10        	adc	#$10
    64cb: 05 e2        	ora	$e2
    64cd: a8           	tay
    64ce: 98           	tya
; }
    64cf: 60           	rts

000064d0 <_ZN6Cursor4ShowEv>:
; void Cursor::Show() {
    64d0: a9 00        	lda	#$0
;   location = GetClosestCardTo(location);
    64d2: ae ba 77     	ldx	$77ba
;   bool IsColumn() const { return locationNumber>=5 && locationNumber <=251; }
    64d5: e0 05        	cpx	#$5
    64d7: 90 28        	bcc	$6501
    64d9: 8a           	txa
;   bool IsColumn() const { return locationNumber>=5 && locationNumber <=251; }
    64da: e0 fc        	cpx	#$fc
    64dc: b0 13        	bcs	$64f1
    64de: 8e 40 78     	stx	$7840
;     result = GetClosestColumnCardTo(start);
    64e1: 20 82 63     	jsr	$6382
    64e4: ae 40 78     	ldx	$7840
    64e7: a8           	tay
    64e8: d0 17        	bne	$6501
    64ea: 8a           	txa
;       result = GetClosestTowerCardTo(start);
    64eb: 20 06 64     	jsr	$6406
    64ee: 4c 01 65     	jmp	$6501
    64f1: 8e 40 78     	stx	$7840
;     result = GetClosestTowerCardTo(start);
    64f4: 20 06 64     	jsr	$6406
    64f7: ae 40 78     	ldx	$7840
    64fa: a8           	tay
    64fb: d0 04        	bne	$6501
    64fd: 8a           	txa
;       result = GetClosestColumnCardTo(start);
    64fe: 20 82 63     	jsr	$6382
;   location = GetClosestCardTo(location);
    6501: 8d ba 77     	sta	$77ba
;   if (state == State::Idle) {
    6504: ae b7 77     	ldx	$77b7
    6507: ac b8 77     	ldy	$77b8
    650a: d0 03        	bne	$650f
    650c: 8a           	txa
    650d: f0 01        	beq	$6510
; }
    650f: 60           	rts
;     Toggle();
    6510: 20 28 63     	jsr	$6328
    6513: a2 01        	ldx	#$1
;     state = State::On;
    6515: 8e b7 77     	stx	$77b7
    6518: ca           	dex
    6519: 8e b8 77     	stx	$77b8
; }
    651c: 60           	rts
    651d: 00           	brk

0000651e <_ZN7Drawing14DrawBackgroundEv>:
; void Drawing::DrawBackground() {
    651e: a2 00        	ldx	#$0
    6520: a0 28        	ldy	#$28
    6522: 84 e2        	sty	$e2
;          return lo[index];
    6524: bc 51 74     	ldy	$7451,x
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    6527: 18           	clc
    6528: 84 e4        	sty	$e4
;          return hi[index];
    652a: bd 91 73     	lda	$7391,x
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    652d: 6d 68 76     	adc	$7668
    6530: 85 e5        	sta	$e5
;       for (uint8_t y=0; y<192; ++y)
    6532: e8           	inx
;       asm volatile (
    6533: a9 00        	lda	#$0
    6535: a4 e2        	ldy	$e2
    6537: f0 05        	beq	$653e
    6539: 88           	dey
    653a: 91 e4        	sta	($e4),y
    653c: d0 fb        	bne	$6539
;       for (uint8_t y=0; y<192; ++y)
    653e: e0 c0        	cpx	#$c0
    6540: d0 e2        	bne	$6524
; }
    6542: 60           	rts
    6543: 00           	brk

00006544 <_ZN7Drawing9XorSpriteEPKN2a27HGRWordEhhh>:
;                 uint8_t x) {
    6544: a8           	tay
    6545: 86 e8        	stx	$e8
    6547: a9 00        	lda	#$0
    6549: 48           	pha
    654a: 98           	tya
    654b: aa           	tax
    654c: 68           	pla
    654d: 85 e6        	sta	$e6
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    654f: 18           	clc
    6550: a5 e8        	lda	$e8
    6552: 79 51 74     	adc	$7451,y
    6555: 85 e4        	sta	$e4
;          return hi[index];
    6557: b9 91 73     	lda	$7391,y
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    655a: 18           	clc
    655b: 6d 68 76     	adc	$7668
    655e: 85 e5        	sta	$e5
    6560: a0 00        	ldy	#$0
;     rowPointer[0] ^= sprite[i].GetLeft();
    6562: b1 e4        	lda	($e4),y
    6564: a4 e6        	ldy	$e6
    6566: 84 e9        	sty	$e9
    6568: a4 e6        	ldy	$e6
;     rowPointer[0] ^= sprite[i].GetLeft();
    656a: 51 e2        	eor	($e2),y
    656c: a0 00        	ldy	#$0
    656e: 91 e4        	sta	($e4),y
    6570: a5 e6        	lda	$e6
    6572: 18           	clc
    6573: 65 e2        	adc	$e2
    6575: 85 e6        	sta	$e6
    6577: a5 e3        	lda	$e3
    6579: 69 00        	adc	#$0
    657b: 85 e7        	sta	$e7
    657d: c8           	iny
;     rowPointer[1] ^= sprite[i].GetRight();
    657e: b1 e4        	lda	($e4),y
    6580: 51 e6        	eor	($e6),y
    6582: 91 e4        	sta	($e4),y
;     uint8_t *rowPointer = hgr.GetByteAddress(y++, x);
    6584: e8           	inx
;   for (int i=0; i < rows; ++i) {
    6585: 18           	clc
    6586: a5 e9        	lda	$e9
    6588: 69 02        	adc	#$2
    658a: 48           	pha
    658b: 8a           	txa
    658c: a8           	tay
    658d: 68           	pla
    658e: 85 e6        	sta	$e6
;   for (int i=0; i < rows; ++i) {
    6590: c9 12        	cmp	#$12
    6592: f0 03        	beq	$6597
    6594: 4c 4f 65     	jmp	$654f
; }
    6597: 60           	rts

00006598 <_ZN7Drawing11DrawCardTopE11CompactCardhh>:
; void Drawing::DrawCardTop(CompactCard card, uint8_t x, uint8_t y) {
    6598: 86 ec        	stx	$ec
    659a: a4 e4        	ldy	$e4
    659c: 85 ee        	sta	$ee
;   Rank GetRank() const { return (Rank)card.parts.rank; }
    659e: 29 0f        	and	#$f
;     return *ranksLookup.Get((uint8_t)rank - 1);
    65a0: 18           	clc
    65a1: 69 ff        	adc	#$ff
    65a3: aa           	tax
;          return (T)((hi[index]<<8) | lo[index]);
    65a4: bd 7b 76     	lda	$767b,x
    65a7: 85 ef        	sta	$ef
    65a9: 85 e4        	sta	$e4
    65ab: bd 6e 76     	lda	$766e,x
    65ae: aa           	tax
    65af: 86 f2        	stx	$f2
    65b1: 86 e5        	stx	$e5
    65b3: 84 ed        	sty	$ed
    65b5: 98           	tya
    65b6: aa           	tax
    65b7: 84 e6        	sty	$e6
    65b9: a0 00        	ldy	#$0
    65bb: 84 e7        	sty	$e7
    65bd: a4 ec        	ldy	$ec
    65bf: a5 ec        	lda	$ec
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    65c1: 18           	clc
    65c2: 7d 51 74     	adc	$7451,x
    65c5: 85 e8        	sta	$e8
    65c7: a0 00        	ldy	#$0
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    65c9: b1 e2        	lda	($e2),y
    65cb: 18           	clc
    65cc: 7d 91 73     	adc	$7391,x
    65cf: 85 e9        	sta	$e9
    65d1: a6 e7        	ldx	$e7
    65d3: a4 e7        	ldy	$e7
;       uint8_t GetLeft() const { return left; }
    65d5: b1 e4        	lda	($e4),y
    65d7: a0 00        	ldy	#$0
;     rowPointer[0] = sprite[i].GetLeft();
    65d9: 91 e8        	sta	($e8),y
    65db: a5 ef        	lda	$ef
    65dd: 18           	clc
    65de: 65 e7        	adc	$e7
    65e0: 85 ea        	sta	$ea
    65e2: a5 f2        	lda	$f2
    65e4: 69 00        	adc	#$0
    65e6: 85 eb        	sta	$eb
    65e8: c8           	iny
;       uint8_t GetRight() const { return right; }
    65e9: b1 ea        	lda	($ea),y
;     rowPointer[1] = sprite[i].GetRight();
    65eb: 91 e8        	sta	($e8),y
;     uint8_t *rowPointer = hgr.GetByteAddress(y++, x);
    65ed: e6 e6        	inc	$e6
;   for (int i=0; i < rows; ++i) {
    65ef: 18           	clc
    65f0: a5 e7        	lda	$e7
    65f2: 69 02        	adc	#$2
    65f4: a6 e6        	ldx	$e6
    65f6: 85 e7        	sta	$e7
    65f8: c9 12        	cmp	#$12
    65fa: f0 03        	beq	$65ff
    65fc: 4c bd 65     	jmp	$65bd
    65ff: a5 ee        	lda	$ee
;   Suit GetSuit() const { return (Suit)card.parts.suit; }
    6601: 4a           	lsr
    6602: 4a           	lsr
    6603: 4a           	lsr
    6604: 4a           	lsr
    6605: 29 03        	and	#$3
    6607: aa           	tax
;          return (T)((hi[index]<<8) | lo[index]);
    6608: bc 8c 76     	ldy	$768c,x
    660b: 84 ee        	sty	$ee
    660d: 84 e4        	sty	$e4
;          return (T)((hi[index]<<8) | lo[index]);
    660f: bd 88 76     	lda	$7688,x
    6612: aa           	tax
    6613: 86 ef        	stx	$ef
    6615: 86 e5        	stx	$e5
;     y, x + 2);
    6617: 18           	clc
    6618: a5 ec        	lda	$ec
    661a: 69 02        	adc	#$2
    661c: 85 f2        	sta	$f2
    661e: a6 ed        	ldx	$ed
    6620: 86 e6        	stx	$e6
    6622: a9 00        	lda	#$0
    6624: 85 e7        	sta	$e7
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    6626: 18           	clc
    6627: a5 f2        	lda	$f2
    6629: 7d 51 74     	adc	$7451,x
    662c: 85 e8        	sta	$e8
    662e: a0 00        	ldy	#$0
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    6630: b1 e2        	lda	($e2),y
    6632: 18           	clc
    6633: 7d 91 73     	adc	$7391,x
    6636: 85 e9        	sta	$e9
    6638: a6 e7        	ldx	$e7
    663a: 86 ec        	stx	$ec
    663c: a4 e7        	ldy	$e7
;       uint8_t GetLeft() const { return left; }
    663e: b1 e4        	lda	($e4),y
    6640: a0 00        	ldy	#$0
;     rowPointer[0] = sprite[i].GetLeft();
    6642: 91 e8        	sta	($e8),y
    6644: a5 ee        	lda	$ee
    6646: 18           	clc
    6647: 65 e7        	adc	$e7
    6649: 85 ea        	sta	$ea
    664b: a5 ef        	lda	$ef
    664d: 69 00        	adc	#$0
    664f: 85 eb        	sta	$eb
    6651: c8           	iny
;       uint8_t GetRight() const { return right; }
    6652: b1 ea        	lda	($ea),y
;     rowPointer[1] = sprite[i].GetRight();
    6654: 91 e8        	sta	($e8),y
;     uint8_t *rowPointer = hgr.GetByteAddress(y++, x);
    6656: e6 e6        	inc	$e6
;   for (int i=0; i < rows; ++i) {
    6658: 18           	clc
    6659: a5 e7        	lda	$e7
    665b: 69 02        	adc	#$2
    665d: a6 e6        	ldx	$e6
    665f: 85 e7        	sta	$e7
;   for (int i=0; i < rows; ++i) {
    6661: c9 12        	cmp	#$12
    6663: f0 03        	beq	$6668
    6665: 4c 26 66     	jmp	$6626
; }
    6668: 60           	rts
    6669: 00           	brk

0000666a <_ZN7Drawing8DrawCardE11CompactCardhh>:
; void Drawing::DrawCard(CompactCard card, uint8_t x, uint8_t y) {
    666a: 85 f0        	sta	$f0
    666c: a5 f4        	lda	$f4
    666e: 48           	pha
    666f: a5 f5        	lda	$f5
    6671: 48           	pha
    6672: a5 f6        	lda	$f6
    6674: 48           	pha
    6675: a5 f7        	lda	$f7
    6677: 48           	pha
    6678: a5 f0        	lda	$f0
    667a: 86 f4        	stx	$f4
    667c: a6 e4        	ldx	$e4
    667e: 86 f5        	stx	$f5
    6680: a6 e2        	ldx	$e2
    6682: 86 f6        	stx	$f6
    6684: a6 e3        	ldx	$e3
    6686: 86 f7        	stx	$f7
;       return *(volatile int8_t *)(0xC019);
    6688: ae 19 c0     	ldx	$c019
    668b: e0 00        	cpx	#$0
    668d: 30 08        	bmi	$6697
;          if (previousState < 0)
    668f: ac 6a 76     	ldy	$766a
    6692: 10 06        	bpl	$669a
;             ++counter;
    6694: ee 6b 76     	inc	$766b
    6697: 8e 6a 76     	stx	$766a
    669a: a6 f6        	ldx	$f6
    669c: 86 e2        	stx	$e2
    669e: a6 f7        	ldx	$f7
    66a0: 86 e3        	stx	$e3
    66a2: a6 f5        	ldx	$f5
    66a4: 86 e4        	stx	$e4
    66a6: a6 f4        	ldx	$f4
;   DrawCardTop(card, x, y);
    66a8: 20 98 65     	jsr	$6598
;       return *(volatile int8_t *)(0xC019);
    66ab: ae 19 c0     	ldx	$c019
    66ae: 8a           	txa
    66af: 30 08        	bmi	$66b9
;          if (previousState < 0)
    66b1: ac 6a 76     	ldy	$766a
    66b4: 10 06        	bpl	$66bc
;             ++counter;
    66b6: ee 6b 76     	inc	$766b
    66b9: 8e 6a 76     	stx	$766a
;   DrawCardBottom(x, y + CardTopSpriteHeight);
    66bc: 18           	clc
    66bd: a5 f5        	lda	$f5
    66bf: 69 09        	adc	#$9
    66c1: a6 f6        	ldx	$f6
    66c3: 86 e2        	stx	$e2
    66c5: a6 f7        	ldx	$f7
    66c7: 86 e3        	stx	$e3
    66c9: aa           	tax
    66ca: a5 f4        	lda	$f4
    66cc: 20 ee 66     	jsr	$66ee
;       return *(volatile int8_t *)(0xC019);
    66cf: ae 19 c0     	ldx	$c019
    66d2: 8a           	txa
    66d3: 30 08        	bmi	$66dd
;          if (previousState < 0)
    66d5: ac 6a 76     	ldy	$766a
    66d8: 10 06        	bpl	$66e0
;             ++counter;
    66da: ee 6b 76     	inc	$766b
    66dd: 8e 6a 76     	stx	$766a
    66e0: 68           	pla
    66e1: 85 f7        	sta	$f7
    66e3: 68           	pla
    66e4: 85 f6        	sta	$f6
    66e6: 68           	pla
    66e7: 85 f5        	sta	$f5
    66e9: 68           	pla
    66ea: 85 f4        	sta	$f4
; }
    66ec: 60           	rts
    66ed: 00           	brk

000066ee <_ZN7Drawing14DrawCardBottomEhh>:
; void Drawing::DrawCardBottom(uint8_t x, uint8_t y) {
    66ee: 85 e7        	sta	$e7
    66f0: 86 e6        	stx	$e6
    66f2: a2 17        	ldx	#$17
    66f4: a4 e6        	ldy	$e6
    66f6: 84 e5        	sty	$e5
    66f8: a5 e7        	lda	$e7
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    66fa: 18           	clc
    66fb: a4 e6        	ldy	$e6
    66fd: 79 51 74     	adc	$7451,y
    6700: 85 e4        	sta	$e4
    6702: a0 00        	ldy	#$0
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    6704: b1 e2        	lda	($e2),y
    6706: 18           	clc
    6707: a4 e6        	ldy	$e6
    6709: 79 91 73     	adc	$7391,y
    670c: 85 e5        	sta	$e5
;     row = hgr.GetByteAddress(y++, x);
    670e: e6 e6        	inc	$e6
    6710: a9 ff        	lda	#$ff
    6712: a0 00        	ldy	#$0
;     row[0] = 0xFF;
    6714: 91 e4        	sta	($e4),y
    6716: c8           	iny
;     row[1] = 0xFF;
    6717: 91 e4        	sta	($e4),y
    6719: c8           	iny
;     row[2] = 0xFF;
    671a: 91 e4        	sta	($e4),y
    671c: c8           	iny
    671d: a9 bf        	lda	#$bf
;     row[3] = 0xBF;
    671f: 91 e4        	sta	($e4),y
;   for (uint8_t i=0; i < CardHeight - CardTopSpriteHeight - 1; ++i) {
    6721: ca           	dex
    6722: d0 d0        	bne	$66f4
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    6724: 18           	clc
    6725: a5 e7        	lda	$e7
    6727: a6 e6        	ldx	$e6
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    6729: 7d 51 74     	adc	$7451,x
    672c: a0 00        	ldy	#$0
    672e: 85 e4        	sta	$e4
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    6730: b1 e2        	lda	($e2),y
    6732: 18           	clc
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    6733: 7d 91 73     	adc	$7391,x
    6736: 85 e5        	sta	$e5
    6738: a9 fe        	lda	#$fe
;   row[0] = 0xFE;
    673a: 91 e4        	sta	($e4),y
    673c: c8           	iny
    673d: a9 ff        	lda	#$ff
;   row[1] = 0xFF;
    673f: 91 e4        	sta	($e4),y
    6741: c8           	iny
;   row[2] = 0xFF;
    6742: 91 e4        	sta	($e4),y
    6744: c8           	iny
    6745: a9 9f        	lda	#$9f
;   row[3] = 0x9F;
    6747: 91 e4        	sta	($e4),y
; }
    6749: 60           	rts

0000674a <_ZN7Drawing11DrawAcePileE4Suith>:
; void Drawing::DrawAcePile(Suit suit, uint8_t x) {
    674a: 85 e3        	sta	$e3
    674c: a6 e2        	ldx	$e2
;                 return acePiles[(uint8_t)suit];
    674e: a9 ef        	lda	#$ef
    6750: 18           	clc
    6751: 65 e3        	adc	$e3
    6753: 85 e2        	sta	$e2
    6755: a9 77        	lda	#$77
    6757: a0 00        	ldy	#$0
    6759: 69 00        	adc	#$0
    675b: 85 e3        	sta	$e3
    675d: b1 e2        	lda	($e2),y
    675f: a8           	tay
;   result.rank = (Rank)card.parts.rank;
    6760: 29 0f        	and	#$f
    6762: c9 00        	cmp	#$0
    6764: f0 12        	beq	$6778
    6766: 98           	tya
;   card.parts.suit = (uint8_t)_card.suit;
    6767: 29 3f        	and	#$3f
    6769: a0 68        	ldy	#$68
    676b: 84 e2        	sty	$e2
    676d: a0 76        	ldy	#$76
    676f: 84 e3        	sty	$e3
    6771: a0 03        	ldy	#$3
    6773: 84 e4        	sty	$e4
;       DrawCard(card, x, CardLocations::TowersTop);
    6775: 20 6a 66     	jsr	$666a
; }
    6778: 60           	rts
    6779: 00           	brk

0000677a <_ZN7Drawing8DrawGameEv>:
; void Drawing::DrawGame() {
    677a: a5 f4        	lda	$f4
    677c: 48           	pha
    677d: a5 f5        	lda	$f5
    677f: 48           	pha
    6780: a5 f6        	lda	$f6
    6782: 48           	pha
    6783: a5 f7        	lda	$f7
    6785: 48           	pha
    6786: a6 f8        	ldx	$f8
    6788: 8e 7f 78     	stx	$787f
    678b: a6 f9        	ldx	$f9
    678d: 8e 80 78     	stx	$7880
    6790: a6 fa        	ldx	$fa
    6792: 8e 81 78     	stx	$7881
    6795: a6 fb        	ldx	$fb
    6797: 8e 82 78     	stx	$7882
    679a: a6 fc        	ldx	$fc
    679c: 8e 83 78     	stx	$7883
    679f: a2 0c        	ldx	#$c
    67a1: 86 f6        	stx	$f6
    67a3: a2 00        	ldx	#$0
    67a5: 86 e2        	stx	$e2
;   DrawAcePile(Suit::Clubs, 0);
    67a7: a2 00        	ldx	#$0
    67a9: 8a           	txa
    67aa: 20 4a 67     	jsr	$674a
    67ad: a2 04        	ldx	#$4
    67af: 86 e2        	stx	$e2
;   DrawAcePile(Suit::Diamonds, 4);
    67b1: a2 00        	ldx	#$0
    67b3: a9 01        	lda	#$1
    67b5: 20 4a 67     	jsr	$674a
    67b8: a2 20        	ldx	#$20
    67ba: 86 e2        	stx	$e2
;   DrawAcePile(Suit::Hearts, 32);
    67bc: a2 00        	ldx	#$0
    67be: a9 02        	lda	#$2
    67c0: 20 4a 67     	jsr	$674a
    67c3: a2 24        	ldx	#$24
    67c5: 86 e2        	stx	$e2
;   DrawAcePile(Suit::Spades, 36);
    67c7: a2 00        	ldx	#$0
    67c9: a9 03        	lda	#$3
    67cb: 20 4a 67     	jsr	$674a
    67ce: a2 68        	ldx	#$68
    67d0: 86 f4        	stx	$f4
    67d2: a2 76        	ldx	#$76
    67d4: 86 f5        	stx	$f5
    67d6: a2 38        	ldx	#$38
;   inline CompactCard GetTower(uint8_t index) const { return towers[index]; }
    67d8: bd bb 77     	lda	$77bb,x
    67db: a8           	tay
;   result.rank = (Rank)card.parts.rank;
    67dc: 29 0f        	and	#$f
    67de: 84 f1        	sty	$f1
    67e0: a4 f6        	ldy	$f6
    67e2: 84 f7        	sty	$f7
    67e4: a4 f1        	ldy	$f1
    67e6: c9 00        	cmp	#$0
    67e8: f0 18        	beq	$6802
    67ea: 98           	tya
;   card.parts.suit = (uint8_t)_card.suit;
    67eb: 29 3f        	and	#$3f
    67ed: a4 f4        	ldy	$f4
    67ef: 84 e2        	sty	$e2
    67f1: a4 f5        	ldy	$f5
    67f3: 84 e3        	sty	$e3
    67f5: a0 03        	ldy	#$3
    67f7: 84 e4        	sty	$e4
    67f9: 86 f6        	stx	$f6
    67fb: a6 f7        	ldx	$f7
;       DrawCard(card, x, CardLocations::TowersTop);
    67fd: 20 6a 66     	jsr	$666a
    6800: a6 f6        	ldx	$f6
;     x += 4;
    6802: 18           	clc
    6803: a5 f7        	lda	$f7
    6805: 69 04        	adc	#$4
;   for (uint8_t tower=0; tower < 4; ++tower) {
    6807: e8           	inx
    6808: 85 f6        	sta	$f6
;   for (uint8_t tower=0; tower < 4; ++tower) {
    680a: c9 1c        	cmp	#$1c
    680c: f0 03        	beq	$6811
    680e: 4c d8 67     	jmp	$67d8
    6811: a9 00        	lda	#$0
    6813: a2 68        	ldx	#$68
    6815: 86 f4        	stx	$f4
    6817: a2 76        	ldx	#$76
    6819: 86 f5        	stx	$f5
    681b: aa           	tax
    681c: a8           	tay
    681d: 86 f9        	stx	$f9
    681f: 85 f8        	sta	$f8
    6821: aa           	tax
;   uint8_t GetCount() const { return count; }
    6822: bd fc 77     	lda	$77fc,x
    6825: aa           	tax
    6826: 84 fa        	sty	$fa
    6828: 8a           	txa
    6829: d0 03        	bne	$682e
    682b: 4c 75 68     	jmp	$6875
    682e: a4 f8        	ldy	$f8
    6830: 84 e2        	sty	$e2
    6832: a9 f7        	lda	#$f7
    6834: 18           	clc
    6835: 65 f8        	adc	$f8
    6837: 85 f6        	sta	$f6
    6839: a9 77        	lda	#$77
    683b: 69 00        	adc	#$0
    683d: 85 f7        	sta	$f7
    683f: a9 00        	lda	#$0
    6841: a4 f6        	ldy	$f6
    6843: 84 e2        	sty	$e2
    6845: a4 f7        	ldy	$f7
    6847: 84 e3        	sty	$e3
    6849: 86 fb        	stx	$fb
    684b: 85 fc        	sta	$fc
;       DrawCardTop(column.GetCard(j), x, columnYLookup.Y(j));
    684d: 20 80 62     	jsr	$6280
    6850: a6 fc        	ldx	$fc
    6852: 48           	pha
;   inline uint8_t Y(uint8_t index) const { return y[index]; }
    6853: bd 81 73     	lda	$7381,x
    6856: aa           	tax
    6857: 68           	pla
    6858: a4 f4        	ldy	$f4
    685a: 84 e2        	sty	$e2
    685c: a4 f5        	ldy	$f5
    685e: 84 e3        	sty	$e3
    6860: 86 e4        	stx	$e4
    6862: a6 fa        	ldx	$fa
;       DrawCardTop(column.GetCard(j), x, columnYLookup.Y(j));
    6864: 20 98 65     	jsr	$6598
    6867: a6 fb        	ldx	$fb
    6869: a4 fc        	ldy	$fc
    686b: 84 e2        	sty	$e2
;     for (uint8_t j=0; j < cardCount; ++j)
    686d: e6 e2        	inc	$e2
    686f: a5 e2        	lda	$e2
;     for (uint8_t j=0; j < cardCount; ++j)
    6871: e4 e2        	cpx	$e2
    6873: d0 cc        	bne	$6841
;     DrawCardBottom(x, columnYLookup.Y(cardCount - 1) + CardTopSpriteHeight);
    6875: ca           	dex
    6876: a9 09        	lda	#$9
    6878: 18           	clc
    6879: 7d 81 73     	adc	$7381,x
    687c: a6 f4        	ldx	$f4
    687e: 86 e2        	stx	$e2
    6880: a6 f5        	ldx	$f5
    6882: 86 e3        	stx	$e3
    6884: aa           	tax
    6885: a5 fa        	lda	$fa
;     DrawCardBottom(x, columnYLookup.Y(cardCount - 1) + CardTopSpriteHeight);
    6887: 20 ee 66     	jsr	$66ee
;     x += 4;
    688a: 18           	clc
    688b: a5 fa        	lda	$fa
    688d: 69 04        	adc	#$4
    688f: a8           	tay
    6890: a6 f9        	ldx	$f9
;   for (uint8_t i=0; i < 10; ++i) {
    6892: e8           	inx
    6893: 18           	clc
    6894: a5 f8        	lda	$f8
    6896: 69 06        	adc	#$6
    6898: e0 0a        	cpx	#$a
    689a: f0 03        	beq	$689f
    689c: 4c 1d 68     	jmp	$681d
    689f: a0 38        	ldy	#$38
    68a1: a9 0c        	lda	#$c
    68a3: a2 68        	ldx	#$68
    68a5: 86 f4        	stx	$f4
    68a7: a2 76        	ldx	#$76
    68a9: 86 f5        	stx	$f5
;   inline CompactCard GetTower(uint8_t index) const { return towers[index]; }
    68ab: be bb 77     	ldx	$77bb,y
    68ae: 85 f7        	sta	$f7
    68b0: 8a           	txa
;   result.rank = (Rank)card.parts.rank;
    68b1: 29 0f        	and	#$f
    68b3: c9 00        	cmp	#$0
    68b5: f0 18        	beq	$68cf
    68b7: 8a           	txa
;   card.parts.suit = (uint8_t)_card.suit;
    68b8: 29 3f        	and	#$3f
    68ba: a6 f4        	ldx	$f4
    68bc: 86 e2        	stx	$e2
    68be: a6 f5        	ldx	$f5
    68c0: 86 e3        	stx	$e3
    68c2: a2 03        	ldx	#$3
    68c4: 86 e4        	stx	$e4
    68c6: a6 f7        	ldx	$f7
    68c8: 84 f6        	sty	$f6
;       DrawCard(card, x, CardLocations::TowersTop);
    68ca: 20 6a 66     	jsr	$666a
    68cd: a4 f6        	ldy	$f6
;     x += 4;
    68cf: 18           	clc
    68d0: a5 f7        	lda	$f7
    68d2: 69 04        	adc	#$4
;   for (uint8_t tower=0; tower < 4; ++tower) {
    68d4: c8           	iny
    68d5: c9 1c        	cmp	#$1c
    68d7: f0 03        	beq	$68dc
    68d9: 4c ab 68     	jmp	$68ab
    68dc: ae 83 78     	ldx	$7883
    68df: 86 fc        	stx	$fc
    68e1: ae 82 78     	ldx	$7882
    68e4: 86 fb        	stx	$fb
    68e6: ae 81 78     	ldx	$7881
    68e9: 86 fa        	stx	$fa
    68eb: ae 80 78     	ldx	$7880
    68ee: 86 f9        	stx	$f9
    68f0: ae 7f 78     	ldx	$787f
    68f3: 86 f8        	stx	$f8
    68f5: 68           	pla
    68f6: 85 f7        	sta	$f7
    68f8: 68           	pla
    68f9: 85 f6        	sta	$f6
    68fb: 68           	pla
    68fc: 85 f5        	sta	$f5
    68fe: 68           	pla
    68ff: 85 f4        	sta	$f4
; }
    6901: 60           	rts

00006902 <_ZN7Drawing9EraseCardE12CardLocation>:
; void Drawing::EraseCard(CardLocation location) {
    6902: 85 f0        	sta	$f0
    6904: a5 f4        	lda	$f4
    6906: 48           	pha
    6907: a5 f5        	lda	$f5
    6909: 48           	pha
    690a: a5 f0        	lda	$f0
    690c: 8d 41 78     	sta	$7841
    690f: a6 e2        	ldx	$e2
    6911: 86 f4        	stx	$f4
    6913: a6 e3        	ldx	$e3
    6915: 86 f5        	stx	$f5
;   uint8_t x = location.GetX();
    6917: 20 46 62     	jsr	$6246
    691a: 85 e9        	sta	$e9
    691c: ad 41 78     	lda	$7841
;   bool IsTower() const { return locationNumber > 251; }
    691f: c9 fc        	cmp	#$fc
    6921: a2 03        	ldx	#$3
    6923: a0 01        	ldy	#$1
    6925: b0 02        	bcs	$6929
    6927: a0 00        	ldy	#$0
    6929: 84 e8        	sty	$e8
    692b: b0 15        	bcs	$6942
;   bool IsAce() const { return locationNumber < 5; }
    692d: c9 05        	cmp	#$5
    692f: a2 03        	ldx	#$3
    6931: 90 0f        	bcc	$6942
    6933: a4 e9        	ldy	$e9
    6935: 85 e2        	sta	$e2
;   return locationNumber & 0x0F;
    6937: 29 0f        	and	#$f
    6939: aa           	tax
    693a: a5 e2        	lda	$e2
    693c: 48           	pha
;   inline uint8_t Y(uint8_t index) const { return y[index]; }
    693d: bd 81 73     	lda	$7381,x
    6940: aa           	tax
    6941: 68           	pla
    6942: 85 e6        	sta	$e6
    6944: a0 21        	ldy	#$21
    6946: 84 ea        	sty	$ea
    6948: 86 e7        	stx	$e7
    694a: 86 e2        	stx	$e2
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    694c: 18           	clc
    694d: a4 e9        	ldy	$e9
    694f: 84 e3        	sty	$e3
    6951: a5 e9        	lda	$e9
    6953: 7d 51 74     	adc	$7451,x
    6956: 85 e4        	sta	$e4
    6958: a0 00        	ldy	#$0
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    695a: b1 f4        	lda	($f4),y
    695c: a0 00        	ldy	#$0
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    695e: 18           	clc
    695f: 7d 91 73     	adc	$7391,x
    6962: 85 e5        	sta	$e5
;     uint8_t *row = hgr.GetByteAddress(y++, x);
    6964: e6 e2        	inc	$e2
    6966: 98           	tya
;     row[1] = 0;
    6967: 91 e4        	sta	($e4),y
    6969: a6 ea        	ldx	$ea
    696b: 86 e3        	stx	$e3
    696d: c8           	iny
;     row[1] = 0;
    696e: 91 e4        	sta	($e4),y
    6970: c8           	iny
    6971: 91 e4        	sta	($e4),y
    6973: c8           	iny
    6974: 91 e4        	sta	($e4),y
;   for (int i=0; i<CardHeight; ++i) {
    6976: c6 e3        	dec	$e3
    6978: a6 e2        	ldx	$e2
    697a: a4 e3        	ldy	$e3
    697c: 84 ea        	sty	$ea
    697e: d0 cc        	bne	$694c
    6980: a6 e6        	ldx	$e6
;   bool IsColumn() const { return locationNumber>=5 && locationNumber <=251; }
    6982: e0 05        	cpx	#$5
    6984: 90 14        	bcc	$699a
    6986: a5 e8        	lda	$e8
    6988: d0 10        	bne	$699a
    698a: a6 e7        	ldx	$e7
;     DrawCardBottom(x, startY - CardLocations::CardShadowHeight);
    698c: ca           	dex
    698d: a4 f4        	ldy	$f4
    698f: 84 e2        	sty	$e2
    6991: a4 f5        	ldy	$f5
    6993: 84 e3        	sty	$e3
    6995: a5 e9        	lda	$e9
;     DrawCardBottom(x, startY - CardLocations::CardShadowHeight);
    6997: 20 ee 66     	jsr	$66ee
    699a: 68           	pla
    699b: 85 f5        	sta	$f5
    699d: 68           	pla
    699e: 85 f4        	sta	$f4
; }
    69a0: 60           	rts
    69a1: 00           	brk

000069a2 <_ZN7Drawing18SaveCardBackgroundEhhP15SavedBackground>:
;               SavedBackground *background) {
    69a2: 85 e7        	sta	$e7
;       return *(volatile int8_t *)(0xC019);
    69a4: ac 19 c0     	ldy	$c019
    69a7: 98           	tya
    69a8: 30 08        	bmi	$69b2
;          if (previousState < 0)
    69aa: ad 6a 76     	lda	$766a
    69ad: 10 06        	bpl	$69b5
;             ++counter;
    69af: ee 6b 76     	inc	$766b
    69b2: 8c 6a 76     	sty	$766a
    69b5: a9 00        	lda	#$0
    69b7: a0 22        	ldy	#$22
    69b9: 85 ea        	sta	$ea
    69bb: 86 e6        	stx	$e6
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    69bd: 18           	clc
    69be: a5 e7        	lda	$e7
    69c0: 7d 51 74     	adc	$7451,x
    69c3: 85 e8        	sta	$e8
    69c5: 84 ed        	sty	$ed
    69c7: a0 00        	ldy	#$0
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    69c9: b1 e2        	lda	($e2),y
    69cb: a0 00        	ldy	#$0
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    69cd: 18           	clc
    69ce: 7d 91 73     	adc	$7391,x
    69d1: 85 e9        	sta	$e9
;     p[0] = row[0];
    69d3: b1 e8        	lda	($e8),y
    69d5: a6 ea        	ldx	$ea
    69d7: 86 ec        	stx	$ec
    69d9: a4 ea        	ldy	$ea
;     p[0] = row[0];
    69db: 91 e4        	sta	($e4),y
    69dd: a5 ea        	lda	$ea
    69df: 18           	clc
;     row = hgr.GetByteAddress(y++, x);
    69e0: 65 e4        	adc	$e4
    69e2: 85 ea        	sta	$ea
    69e4: a5 e5        	lda	$e5
    69e6: 69 00        	adc	#$0
    69e8: 85 eb        	sta	$eb
    69ea: a0 01        	ldy	#$1
;     p[1] = row[1];
    69ec: b1 e8        	lda	($e8),y
    69ee: 91 ea        	sta	($ea),y
    69f0: c8           	iny
;     p[2] = row[2];
    69f1: b1 e8        	lda	($e8),y
    69f3: 91 ea        	sta	($ea),y
    69f5: c8           	iny
;     p[3] = row[3];
    69f6: b1 e8        	lda	($e8),y
    69f8: 91 ea        	sta	($ea),y
    69fa: a4 ed        	ldy	$ed
;     row = hgr.GetByteAddress(y++, x);
    69fc: e6 e6        	inc	$e6
;   for (uint8_t i=0; i < SavedBackground::Height; ++i) {
    69fe: 18           	clc
    69ff: a5 ec        	lda	$ec
    6a01: 69 04        	adc	#$4
    6a03: 85 ea        	sta	$ea
    6a05: 88           	dey
    6a06: a6 e6        	ldx	$e6
    6a08: 98           	tya
    6a09: f0 03        	beq	$6a0e
    6a0b: 4c bd 69     	jmp	$69bd
; }
    6a0e: 60           	rts
    6a0f: 00           	brk

00006a10 <_ZN7Drawing17RestoreBackgroundEP15SavedBackgroundhh>:
;                 uint8_t x, uint8_t y) {
    6a10: 85 e7        	sta	$e7
;       return *(volatile int8_t *)(0xC019);
    6a12: ac 19 c0     	ldy	$c019
    6a15: 98           	tya
    6a16: 30 08        	bmi	$6a20
;          if (previousState < 0)
    6a18: ad 6a 76     	lda	$766a
    6a1b: 10 06        	bpl	$6a23
;             ++counter;
    6a1d: ee 6b 76     	inc	$766b
    6a20: 8c 6a 76     	sty	$766a
    6a23: a9 00        	lda	#$0
    6a25: a0 22        	ldy	#$22
    6a27: 86 e6        	stx	$e6
    6a29: 85 ec        	sta	$ec
    6a2b: 18           	clc
;     row = hgr.GetByteAddress(y++, x);
    6a2c: 65 e4        	adc	$e4
    6a2e: 85 e8        	sta	$e8
    6a30: a5 e5        	lda	$e5
    6a32: 69 00        	adc	#$0
    6a34: 85 e9        	sta	$e9
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    6a36: 18           	clc
    6a37: a5 e7        	lda	$e7
    6a39: 7d 51 74     	adc	$7451,x
    6a3c: 85 ea        	sta	$ea
    6a3e: 84 ed        	sty	$ed
    6a40: a0 00        	ldy	#$0
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    6a42: b1 e2        	lda	($e2),y
    6a44: 18           	clc
    6a45: 7d 91 73     	adc	$7391,x
    6a48: 85 eb        	sta	$eb
    6a4a: a4 ec        	ldy	$ec
;     row[0] = p[0];
    6a4c: b1 e4        	lda	($e4),y
    6a4e: a0 00        	ldy	#$0
    6a50: 91 ea        	sta	($ea),y
    6a52: c8           	iny
;     row[1] = p[1];
    6a53: b1 e8        	lda	($e8),y
    6a55: 91 ea        	sta	($ea),y
    6a57: c8           	iny
;     row[2] = p[2];
    6a58: b1 e8        	lda	($e8),y
    6a5a: 91 ea        	sta	($ea),y
    6a5c: c8           	iny
;     row[3] = p[3];
    6a5d: b1 e8        	lda	($e8),y
    6a5f: 91 ea        	sta	($ea),y
    6a61: a4 ed        	ldy	$ed
    6a63: a5 ec        	lda	$ec
;     row = hgr.GetByteAddress(y++, x);
    6a65: e6 e6        	inc	$e6
;   for (uint8_t i=0; i < SavedBackground::Height; ++i) {
    6a67: 18           	clc
    6a68: 69 04        	adc	#$4
    6a6a: 88           	dey
    6a6b: a6 e6        	ldx	$e6
    6a6d: c0 00        	cpy	#$0
    6a6f: f0 03        	beq	$6a74
    6a71: 4c 29 6a     	jmp	$6a29
; }
    6a74: 60           	rts
    6a75: 00           	brk

00006a76 <_ZN4Game8Shuffle8Eh>:
; void Game::Shuffle8(uint8_t instruction) {
    6a76: 85 e2        	sta	$e2
    6a78: a9 00        	lda	#$0
    6a7a: a2 34        	ldx	#$34
    6a7c: 86 e3        	stx	$e3
    6a7e: a2 bb        	ldx	#$bb
    6a80: 86 e4        	stx	$e4
    6a82: a2 77        	ldx	#$77
    6a84: 86 e5        	stx	$e5
    6a86: 85 e6        	sta	$e6
    6a88: 85 ea        	sta	$ea
    6a8a: a2 45        	ldx	#$45
    6a8c: 86 e8        	stx	$e8
    6a8e: a2 78        	ldx	#$78
    6a90: 86 e9        	stx	$e9
    6a92: 46 e2        	lsr	$e2
;       asm volatile (
    6a94: a4 e3        	ldy	$e3
    6a96: f0 0d        	beq	$6aa5
    6a98: d0 04        	bne	$6a9e
    6a9a: b1 e4        	lda	($e4),y
    6a9c: 91 e8        	sta	($e8),y
    6a9e: 88           	dey
    6a9f: d0 f9        	bne	$6a9a
    6aa1: b1 e4        	lda	($e4),y
    6aa3: 91 e8        	sta	($e8),y
    6aa5: b0 34        	bcs	$6adb
    6aa7: a2 ff        	ldx	#$ff
    6aa9: a0 33        	ldy	#$33
    6aab: a9 cc        	lda	#$cc
    6aad: 85 e7        	sta	$e7
    6aaf: a9 17        	lda	#$17
    6ab1: 86 e8        	stx	$e8
;         index += 7;
    6ab3: aa           	tax
    6ab4: 86 e9        	stx	$e9
    6ab6: aa           	tax
    6ab7: 85 eb        	sta	$eb
;         deck[j] = deckCopy[index];
    6ab9: bd 45 78     	lda	$7845,x
    6abc: 99 bb 77     	sta	$77bb,y
;         index += 7;
    6abf: 18           	clc
    6ac0: a5 e9        	lda	$e9
    6ac2: 69 07        	adc	#$7
;         if (index >= 52)
    6ac4: c9 34        	cmp	#$34
    6ac6: 90 05        	bcc	$6acd
    6ac8: 18           	clc
    6ac9: a5 eb        	lda	$eb
    6acb: 69 d3        	adc	#$d3
    6acd: 85 e9        	sta	$e9
;       for (int j=51; j >= 0; --j) {
    6acf: 88           	dey
    6ad0: e6 e7        	inc	$e7
    6ad2: d0 e2        	bne	$6ab6
    6ad4: e6 e8        	inc	$e8
    6ad6: d0 de        	bne	$6ab6
    6ad8: 4c 01 6b     	jmp	$6b01
    6adb: a0 00        	ldy	#$0
    6add: a2 19        	ldx	#$19
    6adf: 86 e7        	stx	$e7
    6ae1: e8           	inx
    6ae2: 84 e8        	sty	$e8
    6ae4: a4 e7        	ldy	$e7
;         deck[index++] = deckCopy[25 - j];
    6ae6: b9 45 78     	lda	$7845,y
    6ae9: a4 e8        	ldy	$e8
    6aeb: 99 bb 77     	sta	$77bb,y
;         deck[index++] = deckCopy[j + 26];
    6aee: bd 45 78     	lda	$7845,x
    6af1: 99 bc 77     	sta	$77bc,y
    6af4: a5 e8        	lda	$e8
;         deck[index++] = deckCopy[j + 26];
    6af6: 18           	clc
    6af7: 69 02        	adc	#$2
;       for (int j=0; j < 26; ++j) {
    6af9: e8           	inx
    6afa: c6 e7        	dec	$e7
    6afc: a8           	tay
    6afd: c9 34        	cmp	#$34
    6aff: d0 e1        	bne	$6ae2
    6b01: a6 ea        	ldx	$ea
;   for (int i=0; i < 8; ++i) {
    6b03: e8           	inx
    6b04: d0 02        	bne	$6b08
    6b06: e6 e6        	inc	$e6
    6b08: 8a           	txa
    6b09: a6 e6        	ldx	$e6
    6b0b: f0 03        	beq	$6b10
    6b0d: 4c 88 6a     	jmp	$6a88
;   for (int i=0; i < 8; ++i) {
    6b10: c9 08        	cmp	#$8
    6b12: f0 03        	beq	$6b17
    6b14: 4c 88 6a     	jmp	$6a88
; }
    6b17: 60           	rts

00006b18 <_ZNK4Game7GetCardE12CardLocation>:
;   bool IsAce() const { return locationNumber < 5; }
    6b18: c9 05        	cmp	#$5
    6b1a: b0 08        	bcs	$6b24
;     return acePiles[(uint8_t)location.GetAceSuit()];
    6b1c: 18           	clc
    6b1d: 69 ff        	adc	#$ff
    6b1f: aa           	tax
;     return acePiles[(uint8_t)location.GetAceSuit()];
    6b20: bd ef 77     	lda	$77ef,x
; }
    6b23: 60           	rts
;   bool IsTower() const { return locationNumber > 251; }
    6b24: c9 fc        	cmp	#$fc
    6b26: 90 07        	bcc	$6b2f
;   uint8_t GetTowerIndex() const { return locationNumber ^ 0xFF; }
    6b28: 49 ff        	eor	#$ff
    6b2a: aa           	tax
;     return towers[location.GetTowerIndex()];
    6b2b: bd f3 77     	lda	$77f3,x
; }
    6b2e: 60           	rts
    6b2f: 8d 7f 78     	sta	$787f
;   return (locationNumber>>4) - 1;
    6b32: 4a           	lsr
    6b33: 4a           	lsr
    6b34: 4a           	lsr
    6b35: 4a           	lsr
    6b36: a2 00        	ldx	#$0
    6b38: 18           	clc
    6b39: 69 ff        	adc	#$ff
    6b3b: a0 06        	ldy	#$6
    6b3d: 84 e2        	sty	$e2
    6b3f: 86 e3        	stx	$e3
;     return columns[location.GetColumn()].GetCard(location.GetRow());
    6b41: a2 00        	ldx	#$0
    6b43: 20 19 73     	jsr	$7319
    6b46: 85 e2        	sta	$e2
    6b48: 86 e3        	stx	$e3
    6b4a: 18           	clc
;     return columns[location.GetColumn()].GetCard(location.GetRow());
    6b4b: a9 f7        	lda	#$f7
    6b4d: 65 e2        	adc	$e2
    6b4f: 85 e2        	sta	$e2
    6b51: a9 77        	lda	#$77
    6b53: 65 e3        	adc	$e3
    6b55: 85 e3        	sta	$e3
    6b57: ad 7f 78     	lda	$787f
;   return locationNumber & 0x0F;
    6b5a: 29 0f        	and	#$f
;     return columns[location.GetColumn()].GetCard(location.GetRow());
    6b5c: 4c 80 62     	jmp	$6280
    6b5f: 00           	brk

00006b60 <_ZN4Game15GetCardLocationE11CompactCard>:
; CardLocation Game::GetCardLocation(CompactCard card) {
    6b60: 85 e2        	sta	$e2
;   bool IsNull() const { return card.parts.rank == 0; }
    6b62: 29 0f        	and	#$f
    6b64: 85 e3        	sta	$e3
    6b66: a9 00        	lda	#$0
    6b68: a6 e3        	ldx	$e3
    6b6a: d0 03        	bne	$6b6f
    6b6c: 4c 0b 6c     	jmp	$6c0b
    6b6f: a2 00        	ldx	#$0
    6b71: a5 e2        	lda	$e2
    6b73: 86 e4        	stx	$e4
;     if (card == towers[i])
    6b75: dd f3 77     	cmp	$77f3,x
    6b78: d0 03        	bne	$6b7d
    6b7a: 4c 0c 6c     	jmp	$6c0c
    6b7d: a6 e4        	ldx	$e4
;   for (uint8_t i=0; i<4; ++i)
    6b7f: e8           	inx
    6b80: e0 04        	cpx	#$4
    6b82: d0 ed        	bne	$6b71
    6b84: a2 f7        	ldx	#$f7
    6b86: 86 e4        	stx	$e4
    6b88: a2 77        	ldx	#$77
    6b8a: 86 e5        	stx	$e5
    6b8c: a9 00        	lda	#$0
    6b8e: aa           	tax
    6b8f: 86 e9        	stx	$e9
    6b91: 85 ea        	sta	$ea
    6b93: aa           	tax
    6b94: bd fc 77     	lda	$77fc,x
    6b97: aa           	tax
    6b98: 8a           	txa
    6b99: d0 03        	bne	$6b9e
    6b9b: 4c ed 6b     	jmp	$6bed
    6b9e: 86 e6        	stx	$e6
    6ba0: a0 00        	ldy	#$0
    6ba2: 86 e7        	stx	$e7
    6ba4: 98           	tya
    6ba5: 85 e8        	sta	$e8
;   bool operator==(CompactCard c) { return card.asInt == c.card.asInt; }
    6ba7: b1 e4        	lda	($e4),y
;     if (cards[i] == card)
    6ba9: c5 e2        	cmp	$e2
    6bab: d0 03        	bne	$6bb0
    6bad: 4c e8 6b     	jmp	$6be8
;   for (int i=0; i<count; ++i)
    6bb0: c8           	iny
    6bb1: a5 e7        	lda	$e7
;   for (int i=0; i<count; ++i)
    6bb3: c6 e7        	dec	$e7
    6bb5: c9 00        	cmp	#$0
    6bb7: d0 02        	bne	$6bbb
    6bb9: c6 e8        	dec	$e8
    6bbb: a5 e8        	lda	$e8
    6bbd: d0 e8        	bne	$6ba7
    6bbf: a5 e7        	lda	$e7
    6bc1: d0 e4        	bne	$6ba7
;   if (count <= 5)
    6bc3: e0 06        	cpx	#$6
    6bc5: 90 26        	bcc	$6bed
    6bc7: a6 ea        	ldx	$ea
;   result.rank = (Rank)card.parts.rank;
    6bc9: bd fb 77     	lda	$77fb,x
    6bcc: aa           	tax
;   if (card.GetSuit() != fifthCard.GetSuit())
    6bcd: 45 e2        	eor	$e2
    6bcf: 29 30        	and	#$30
    6bd1: d0 1a        	bne	$6bed
    6bd3: 8a           	txa
;   result.rank = (Rank)card.parts.rank;
    6bd4: 29 0f        	and	#$f
;   return (int8_t)r1 - (int8_t)r2;
    6bd6: 38           	sec
    6bd7: e5 e3        	sbc	$e3
    6bd9: aa           	tax
    6bda: 30 11        	bmi	$6bed
;   int8_t index = 4 + offsetToCard;
    6bdc: 18           	clc
    6bdd: 69 04        	adc	#$4
;   if (index >= count)
    6bdf: c5 e6        	cmp	$e6
    6be1: 85 e6        	sta	$e6
    6be3: b0 08        	bcs	$6bed
    6be5: 4c 11 6c     	jmp	$6c11
    6be8: 84 e6        	sty	$e6
    6bea: 98           	tya
    6beb: 10 24        	bpl	$6c11
    6bed: a5 e4        	lda	$e4
;   for (uint8_t i=0; i<10; ++i) {
    6bef: 18           	clc
    6bf0: 69 06        	adc	#$6
    6bf2: 85 e4        	sta	$e4
    6bf4: a5 e5        	lda	$e5
    6bf6: 69 00        	adc	#$0
    6bf8: 85 e5        	sta	$e5
    6bfa: a6 e9        	ldx	$e9
    6bfc: e8           	inx
    6bfd: 18           	clc
    6bfe: a5 ea        	lda	$ea
    6c00: 69 06        	adc	#$6
    6c02: e0 0a        	cpx	#$a
    6c04: f0 03        	beq	$6c09
    6c06: 4c 8f 6b     	jmp	$6b8f
    6c09: a9 00        	lda	#$0
; }
    6c0b: 60           	rts
    6c0c: a5 e4        	lda	$e4
    6c0e: 49 ff        	eor	#$ff
; }
    6c10: 60           	rts
    6c11: a5 e9        	lda	$e9
;   return CardLocation(((column + 1) << 4) | row);
    6c13: 0a           	asl
    6c14: 0a           	asl
    6c15: 0a           	asl
    6c16: 0a           	asl
    6c17: 18           	clc
    6c18: 69 10        	adc	#$10
    6c1a: 05 e6        	ora	$e6
; }
    6c1c: 60           	rts
    6c1d: 00           	brk

00006c1e <_ZN4Game7SetCardE12CardLocation11CompactCard>:
; void Game::SetCard(CardLocation location, CompactCard card) {
    6c1e: 86 e2        	stx	$e2
;   bool IsAce() const { return locationNumber < 5; }
    6c20: c9 05        	cmp	#$5
    6c22: b0 0a        	bcs	$6c2e
;     acePiles[(uint8_t)location.GetAceSuit()] = card;
    6c24: 18           	clc
    6c25: 69 ff        	adc	#$ff
    6c27: aa           	tax
    6c28: a5 e2        	lda	$e2
;     acePiles[(uint8_t)location.GetAceSuit()] = card;
    6c2a: 9d ef 77     	sta	$77ef,x
; }
    6c2d: 60           	rts
    6c2e: a6 e2        	ldx	$e2
    6c30: 8e 7f 78     	stx	$787f
;   bool IsTower() const { return locationNumber > 251; }
    6c33: c9 fc        	cmp	#$fc
    6c35: 90 0a        	bcc	$6c41
;   uint8_t GetTowerIndex() const { return locationNumber ^ 0xFF; }
    6c37: 49 ff        	eor	#$ff
    6c39: aa           	tax
    6c3a: ad 7f 78     	lda	$787f
;     towers[location.GetTowerIndex()] = card;
    6c3d: 9d f3 77     	sta	$77f3,x
; }
    6c40: 60           	rts
    6c41: 85 e4        	sta	$e4
;   return (locationNumber>>4) - 1;
    6c43: 46 e4        	lsr	$e4
    6c45: 46 e4        	lsr	$e4
    6c47: 46 e4        	lsr	$e4
    6c49: 46 e4        	lsr	$e4
    6c4b: c6 e4        	dec	$e4
;   return locationNumber & 0x0F;
    6c4d: 29 0f        	and	#$f
    6c4f: aa           	tax
    6c50: 8d 80 78     	sta	$7880
    6c53: a2 00        	ldx	#$0
    6c55: a0 06        	ldy	#$6
    6c57: 84 e2        	sty	$e2
    6c59: 86 e3        	stx	$e3
    6c5b: a2 00        	ldx	#$0
;    if (row >= 5) {
    6c5d: c9 05        	cmp	#$5
    6c5f: 90 2e        	bcc	$6c8f
    6c61: a5 e4        	lda	$e4
;       if (row >= count)
    6c63: 20 19 73     	jsr	$7319
    6c66: 85 e2        	sta	$e2
    6c68: 86 e3        	stx	$e3
    6c6a: 18           	clc
;       if (row >= count)
    6c6b: a9 f7        	lda	#$f7
    6c6d: 65 e2        	adc	$e2
    6c6f: a8           	tay
    6c70: a9 77        	lda	#$77
    6c72: 65 e3        	adc	$e3
    6c74: 84 e4        	sty	$e4
    6c76: 84 e2        	sty	$e2
    6c78: 85 e5        	sta	$e5
    6c7a: 85 e3        	sta	$e3
    6c7c: a0 05        	ldy	#$5
    6c7e: ad 80 78     	lda	$7880
    6c81: d1 e2        	cmp	($e2),y
    6c83: b0 03        	bcs	$6c88
    6c85: 4c d6 6c     	jmp	$6cd6
    6c88: 18           	clc
    6c89: aa           	tax
    6c8a: a5 e4        	lda	$e4
    6c8c: 4c c4 6c     	jmp	$6cc4
    6c8f: a5 e4        	lda	$e4
    6c91: 20 19 73     	jsr	$7319
    6c94: 85 e2        	sta	$e2
    6c96: 86 e3        	stx	$e3
    6c98: 18           	clc
    6c99: a9 f7        	lda	#$f7
    6c9b: 65 e2        	adc	$e2
    6c9d: a8           	tay
    6c9e: a9 77        	lda	#$77
    6ca0: 65 e3        	adc	$e3
    6ca2: 84 e4        	sty	$e4
    6ca4: 84 e2        	sty	$e2
    6ca6: 85 e5        	sta	$e5
    6ca8: 85 e3        	sta	$e3
    6caa: ad 80 78     	lda	$7880
    6cad: 85 e6        	sta	$e6
    6caf: a8           	tay
    6cb0: ad 7f 78     	lda	$787f
;    cards[row] = card;
    6cb3: 91 e2        	sta	($e2),y
    6cb5: a0 05        	ldy	#$5
    6cb7: a5 e6        	lda	$e6
;    if (row >= count)
    6cb9: d1 e2        	cmp	($e2),y
    6cbb: 90 19        	bcc	$6cd6
    6cbd: 85 e2        	sta	$e2
    6cbf: a5 e4        	lda	$e4
    6cc1: 18           	clc
    6cc2: a6 e2        	ldx	$e2
    6cc4: 69 05        	adc	#$5
    6cc6: 85 e2        	sta	$e2
    6cc8: a5 e5        	lda	$e5
    6cca: 69 00        	adc	#$0
    6ccc: 85 e3        	sta	$e3
    6cce: 8a           	txa
    6ccf: 18           	clc
    6cd0: 69 01        	adc	#$1
    6cd2: a0 00        	ldy	#$0
    6cd4: 91 e2        	sta	($e2),y
; }
    6cd6: 60           	rts

00006cd7 <main>:
; extern "C" int main() {
    6cd7: a5 f4        	lda	$f4
    6cd9: 48           	pha
    6cda: a5 f5        	lda	$f5
    6cdc: 48           	pha
    6cdd: a5 f6        	lda	$f6
    6cdf: 48           	pha
    6ce0: a5 f7        	lda	$f7
    6ce2: 48           	pha
    6ce3: a6 f8        	ldx	$f8
    6ce5: 8e 79 78     	stx	$7879
    6ce8: a6 f9        	ldx	$f9
    6cea: 8e 7a 78     	stx	$787a
    6ced: a6 fa        	ldx	$fa
    6cef: 8e 7b 78     	stx	$787b
    6cf2: a6 fb        	ldx	$fb
    6cf4: 8e 7c 78     	stx	$787c
    6cf7: a6 fc        	ldx	$fc
    6cf9: 8e 7d 78     	stx	$787d
    6cfc: a6 fd        	ldx	$fd
    6cfe: 8e 7e 78     	stx	$787e
    6d01: a0 59        	ldy	#$59
    6d03: a2 00        	ldx	#$0
    6d05: a9 75        	lda	#$75
;          hi[index] = ((uint16_t)value) >> 8;
    6d07: 9d 6e 76     	sta	$766e,x
    6d0a: 85 e2        	sta	$e2
    6d0c: 98           	tya
;          lo[index] = (uint8_t)(uint16_t)value;
    6d0d: 9d 7b 76     	sta	$767b,x
;   for (uint8_t i=0; i < 13; ++i)
    6d10: e8           	inx
    6d11: 18           	clc
    6d12: 69 12        	adc	#$12
    6d14: a8           	tay
    6d15: a5 e2        	lda	$e2
    6d17: 69 00        	adc	#$0
    6d19: e0 0d        	cpx	#$d
    6d1b: d0 ea        	bne	$6d07
    6d1d: a2 00        	ldx	#$0
    6d1f: a0 11        	ldy	#$11
    6d21: a9 75        	lda	#$75
;          hi[index] = ((uint16_t)value) >> 8;
    6d23: 9d 88 76     	sta	$7688,x
    6d26: 85 e2        	sta	$e2
    6d28: 98           	tya
;          lo[index] = (uint8_t)(uint16_t)value;
    6d29: 9d 8c 76     	sta	$768c,x
;   for (uint8_t i=0; i < 4; ++i)
    6d2c: e8           	inx
    6d2d: 18           	clc
    6d2e: 69 12        	adc	#$12
    6d30: a8           	tay
    6d31: a5 e2        	lda	$e2
    6d33: 69 00        	adc	#$0
    6d35: e0 04        	cpx	#$4
    6d37: d0 ea        	bne	$6d23
    6d39: a2 00        	ldx	#$0
;   PersistentState::instance = PersistentState();
    6d3b: 8e 34 78     	stx	$7834
    6d3e: 8e 35 78     	stx	$7835
;   stateMachine = StateMachine();
    6d41: 8e 6c 76     	stx	$766c
    6d44: 8e 6d 76     	stx	$766d
;   CardAnimator::instance = CardAnimator();
    6d47: 8e 90 76     	stx	$7690
    6d4a: 8e 91 76     	stx	$7691
;   Cursor::instance = Cursor();
    6d4d: 8e b7 77     	stx	$77b7
    6d50: 8e b8 77     	stx	$77b8
    6d53: 8e b9 77     	stx	$77b9
    6d56: 8e ba 77     	stx	$77ba
    6d59: a2 68        	ldx	#$68
    6d5b: 86 f4        	stx	$f4
    6d5d: a2 76        	ldx	#$76
    6d5f: 86 f5        	stx	$f5
    6d61: a2 95        	ldx	#$95
    6d63: 86 f6        	stx	$f6
    6d65: a2 76        	ldx	#$76
    6d67: 86 f7        	stx	$f7
    6d69: a2 67        	ldx	#$67
    6d6b: 86 f8        	stx	$f8
    6d6d: a2 76        	ldx	#$76
    6d6f: 86 f9        	stx	$f9
    6d71: a2 20        	ldx	#$20
    6d73: 86 fa        	stx	$fa
    6d75: a2 77        	ldx	#$77
    6d77: 86 fb        	stx	$fb
;       return *(volatile int8_t *)(0xC019);
    6d79: ae 19 c0     	ldx	$c019
    6d7c: 8a           	txa
    6d7d: 30 08        	bmi	$6d87
;          if (previousState < 0)
    6d7f: ac 6a 76     	ldy	$766a
    6d82: 10 06        	bpl	$6d8a
;             ++counter;
    6d84: ee 6b 76     	inc	$766b
    6d87: 8e 6a 76     	stx	$766a
;   switch (state) {
    6d8a: ae 6c 76     	ldx	$766c
    6d8d: ac 6d 76     	ldy	$766d
    6d90: f0 03        	beq	$6d95
    6d92: 4c 54 6e     	jmp	$6e54
    6d95: e0 02        	cpx	#$2
    6d97: f0 03        	beq	$6d9c
    6d99: 4c 54 6e     	jmp	$6e54
;   switch (state) {
    6d9c: ac 90 76     	ldy	$7690
    6d9f: ae 91 76     	ldx	$7691
    6da2: f0 03        	beq	$6da7
    6da4: 4c 9b 6e     	jmp	$6e9b
    6da7: c0 02        	cpy	#$2
    6da9: f0 03        	beq	$6dae
    6dab: 4c 9b 6e     	jmp	$6e9b
;     if (background1Saved) {
    6dae: ae 94 76     	ldx	$7694
    6db1: f0 1e        	beq	$6dd1
;       drawing1.RestoreBackground(&background1, background1X, background1Y);
    6db3: ad 92 76     	lda	$7692
    6db6: ae 93 76     	ldx	$7693
    6db9: a4 f4        	ldy	$f4
    6dbb: 84 e2        	sty	$e2
    6dbd: a4 f5        	ldy	$f5
    6dbf: 84 e3        	sty	$e3
    6dc1: a4 f6        	ldy	$f6
    6dc3: 84 e4        	sty	$e4
    6dc5: a4 f7        	ldy	$f7
    6dc7: 84 e5        	sty	$e5
    6dc9: 20 10 6a     	jsr	$6a10
    6dcc: a2 00        	ldx	#$0
;       background1Saved = false;
    6dce: 8e 94 76     	stx	$7694
;     UpdatePosition();
    6dd1: 20 9a 61     	jsr	$619a
;     background1X = currentX;
    6dd4: ad aa 77     	lda	$77aa
    6dd7: 8d 92 76     	sta	$7692
;     background1Y = currentY;
    6dda: ae ab 77     	ldx	$77ab
    6ddd: 8e 93 76     	stx	$7693
    6de0: a4 f4        	ldy	$f4
    6de2: 84 e2        	sty	$e2
    6de4: a4 f5        	ldy	$f5
    6de6: 84 e3        	sty	$e3
    6de8: a4 f6        	ldy	$f6
    6dea: 84 e4        	sty	$e4
    6dec: a4 f7        	ldy	$f7
    6dee: 84 e5        	sty	$e5
;     drawing1.SaveCardBackground(currentX, currentY, &background1);
    6df0: 20 a2 69     	jsr	$69a2
    6df3: a2 01        	ldx	#$1
;     background1Saved = true;
    6df5: 8e 94 76     	stx	$7694
;     drawing1.DrawCardWithShadow(cardToMove, currentX, currentY);
    6df8: ae a8 77     	ldx	$77a8
    6dfb: 86 e5        	stx	$e5
    6dfd: ae ab 77     	ldx	$77ab
    6e00: 86 e4        	stx	$e4
;          return lo[index];
    6e02: a9 51        	lda	#$51
    6e04: 18           	clc
    6e05: 65 e4        	adc	$e4
    6e07: 85 e2        	sta	$e2
    6e09: a9 74        	lda	#$74
    6e0b: 69 00        	adc	#$0
    6e0d: 85 e3        	sta	$e3
;          return hi[index];
    6e0f: a9 91        	lda	#$91
    6e11: 18           	clc
    6e12: 65 e4        	adc	$e4
    6e14: 85 e6        	sta	$e6
    6e16: a9 73        	lda	#$73
    6e18: 69 00        	adc	#$0
    6e1a: 85 e7        	sta	$e7
    6e1c: a0 00        	ldy	#$0
;          return lo[index];
    6e1e: b1 e2        	lda	($e2),y
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    6e20: 18           	clc
    6e21: 6d aa 77     	adc	$77aa
    6e24: 85 e2        	sta	$e2
;     drawing1.DrawCardWithShadow(cardToMove, currentX, currentY);
    6e26: ae aa 77     	ldx	$77aa
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    6e29: 18           	clc
;          return hi[index];
    6e2a: b1 e6        	lda	($e6),y
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    6e2c: 6d 68 76     	adc	$7668
    6e2f: 85 e3        	sta	$e3
;     uint8_t *row = hgr.GetByteAddress(y++, x);
    6e31: e6 e4        	inc	$e4
    6e33: 98           	tya
;     row[1] = 0;
    6e34: 91 e2        	sta	($e2),y
    6e36: c8           	iny
    6e37: 91 e2        	sta	($e2),y
    6e39: c8           	iny
    6e3a: 91 e2        	sta	($e2),y
    6e3c: c8           	iny
    6e3d: 91 e2        	sta	($e2),y
    6e3f: a4 f4        	ldy	$f4
    6e41: 84 e2        	sty	$e2
    6e43: a4 f5        	ldy	$f5
    6e45: 84 e3        	sty	$e3
    6e47: a5 e5        	lda	$e5
;   DrawCard(card, x, y);
    6e49: 20 6a 66     	jsr	$666a
    6e4c: a0 01        	ldy	#$1
;       asm volatile ("STA\t$C054" : );
    6e4e: 8d 54 c0     	sta	$c054
    6e51: 4c cd 6f     	jmp	$6fcd
    6e54: 98           	tya
    6e55: d0 29        	bne	$6e80
;   switch (state) {
    6e57: e0 01        	cpx	#$1
    6e59: d0 25        	bne	$6e80
;       static uint8_t GetCounter() { return counter; }
    6e5b: ad 6b 76     	lda	$766b
;   uint8_t sinceLastToggle = a2::VBLCounter::GetCounter() - lastToggleTime;
    6e5e: 38           	sec
    6e5f: ed b9 77     	sbc	$77b9
;   switch (state) {
    6e62: ae b7 77     	ldx	$77b7
    6e65: ac b8 77     	ldy	$77b8
    6e68: f0 03        	beq	$6e6d
    6e6a: 4c 56 6f     	jmp	$6f56
    6e6d: e0 02        	cpx	#$2
    6e6f: f0 03        	beq	$6e74
    6e71: 4c 56 6f     	jmp	$6f56
    6e74: a2 01        	ldx	#$1
;     if (sinceLastToggle >= 15) {
    6e76: c9 0f        	cmp	#$f
    6e78: 90 03        	bcc	$6e7d
    6e7a: 4c 64 6f     	jmp	$6f64
    6e7d: 4c 73 6f     	jmp	$6f73
    6e80: 98           	tya
    6e81: f0 03        	beq	$6e86
    6e83: 4c 79 6d     	jmp	$6d79
    6e86: 8a           	txa
    6e87: f0 03        	beq	$6e8c
    6e89: 4c 79 6d     	jmp	$6d79
;       asm volatile ("STA\t$C057" : );
    6e8c: 8d 57 c0     	sta	$c057
;       asm volatile ("STA\t$C050" : );
    6e8f: 8d 50 c0     	sta	$c050
;       asm volatile ("STA\t$C053" : );
    6e92: 8d 53 c0     	sta	$c053
    6e95: 20 44 71     	jsr	$7144
    6e98: 4c 79 6d     	jmp	$6d79
    6e9b: 8a           	txa
    6e9c: f0 03        	beq	$6ea1
    6e9e: 4c d7 6f     	jmp	$6fd7
;   switch (state) {
    6ea1: c0 01        	cpy	#$1
    6ea3: f0 03        	beq	$6ea8
    6ea5: 4c d7 6f     	jmp	$6fd7
;     if (timeLeft == 0) {
    6ea8: ae b6 77     	ldx	$77b6
    6eab: d0 03        	bne	$6eb0
    6ead: 4c c2 6f     	jmp	$6fc2
;     if (background2Saved) {
    6eb0: ae 1f 77     	ldx	$771f
    6eb3: f0 1e        	beq	$6ed3
;       drawing2.RestoreBackground(&background2, background2X, background2Y);
    6eb5: ad 1d 77     	lda	$771d
    6eb8: ae 1e 77     	ldx	$771e
    6ebb: a4 f8        	ldy	$f8
    6ebd: 84 e2        	sty	$e2
    6ebf: a4 f9        	ldy	$f9
    6ec1: 84 e3        	sty	$e3
    6ec3: a4 fa        	ldy	$fa
    6ec5: 84 e4        	sty	$e4
    6ec7: a4 fb        	ldy	$fb
    6ec9: 84 e5        	sty	$e5
    6ecb: 20 10 6a     	jsr	$6a10
    6ece: a2 00        	ldx	#$0
;       background2Saved = false;
    6ed0: 8e 1f 77     	stx	$771f
;     UpdatePosition();
    6ed3: 20 9a 61     	jsr	$619a
;     background2X = currentX;
    6ed6: ad aa 77     	lda	$77aa
    6ed9: 8d 1d 77     	sta	$771d
;     background2Y = currentY;
    6edc: ae ab 77     	ldx	$77ab
    6edf: 8e 1e 77     	stx	$771e
    6ee2: a4 f8        	ldy	$f8
    6ee4: 84 e2        	sty	$e2
    6ee6: a4 f9        	ldy	$f9
    6ee8: 84 e3        	sty	$e3
    6eea: a4 fa        	ldy	$fa
    6eec: 84 e4        	sty	$e4
    6eee: a4 fb        	ldy	$fb
    6ef0: 84 e5        	sty	$e5
;     drawing2.SaveCardBackground(currentX, currentY, &background2);
    6ef2: 20 a2 69     	jsr	$69a2
    6ef5: a2 01        	ldx	#$1
;     background2Saved = true;
    6ef7: 8e 1f 77     	stx	$771f
;     drawing2.DrawCardWithShadow(cardToMove, currentX, currentY);
    6efa: ae a8 77     	ldx	$77a8
    6efd: 86 e5        	stx	$e5
    6eff: ae ab 77     	ldx	$77ab
    6f02: 86 e4        	stx	$e4
;          return lo[index];
    6f04: a9 51        	lda	#$51
    6f06: 18           	clc
    6f07: 65 e4        	adc	$e4
    6f09: 85 e2        	sta	$e2
    6f0b: a9 74        	lda	#$74
    6f0d: 69 00        	adc	#$0
    6f0f: 85 e3        	sta	$e3
;          return hi[index];
    6f11: a9 91        	lda	#$91
    6f13: 18           	clc
    6f14: 65 e4        	adc	$e4
    6f16: 85 e6        	sta	$e6
    6f18: a9 73        	lda	#$73
    6f1a: 69 00        	adc	#$0
;     drawing2.DrawCardWithShadow(cardToMove, currentX, currentY);
    6f1c: ae aa 77     	ldx	$77aa
    6f1f: 85 e7        	sta	$e7
    6f21: a0 00        	ldy	#$0
;          return lo[index];
    6f23: b1 e2        	lda	($e2),y
;                (uint8_t)(rowPointers.GetLowByte(row) + byteOffset) |
    6f25: 18           	clc
    6f26: 6d aa 77     	adc	$77aa
    6f29: 85 e2        	sta	$e2
;          return hi[index];
    6f2b: b1 e6        	lda	($e6),y
;                ((pageOffset + rowPointers.GetHighByte(row)) << 8)
    6f2d: 18           	clc
    6f2e: 6d 67 76     	adc	$7667
    6f31: 85 e3        	sta	$e3
;     uint8_t *row = hgr.GetByteAddress(y++, x);
    6f33: e6 e4        	inc	$e4
    6f35: 98           	tya
;     row[1] = 0;
    6f36: 91 e2        	sta	($e2),y
    6f38: c8           	iny
    6f39: 91 e2        	sta	($e2),y
    6f3b: c8           	iny
    6f3c: 91 e2        	sta	($e2),y
    6f3e: c8           	iny
    6f3f: 91 e2        	sta	($e2),y
    6f41: a4 f8        	ldy	$f8
    6f43: 84 e2        	sty	$e2
    6f45: a4 f9        	ldy	$f9
    6f47: 84 e3        	sty	$e3
    6f49: a5 e5        	lda	$e5
;   DrawCard(card, x, y);
    6f4b: 20 6a 66     	jsr	$666a
    6f4e: a0 02        	ldy	#$2
;       asm volatile ("STA\t$C055" : );
    6f50: 8d 55 c0     	sta	$c055
    6f53: 4c cd 6f     	jmp	$6fcd
    6f56: c0 00        	cpy	#$0
    6f58: d0 19        	bne	$6f73
;   switch (state) {
    6f5a: e0 01        	cpx	#$1
    6f5c: d0 15        	bne	$6f73
    6f5e: a2 02        	ldx	#$2
;     if (sinceLastToggle >= 30) {
    6f60: c9 1e        	cmp	#$1e
    6f62: 90 0f        	bcc	$6f73
    6f64: 86 fc        	stx	$fc
    6f66: 20 28 63     	jsr	$6328
    6f69: a6 fc        	ldx	$fc
    6f6b: 8e b7 77     	stx	$77b7
    6f6e: a2 00        	ldx	#$0
    6f70: 8e b8 77     	stx	$77b8
;       int8_t b = *(volatile int8_t *)KBD;
    6f73: ad 00 c0     	lda	$c000
    6f76: aa           	tax
    6f77: 30 03        	bmi	$6f7c
    6f79: 4c 79 6d     	jmp	$6d79
;          asm volatile ("BIT\t$C010" : );
    6f7c: 2c 10 c0     	bit	$c010
;          return (KeyCode)(0x7F & b);
    6f7f: 29 7f        	and	#$7f
    6f81: aa           	tax
    6f82: d0 03        	bne	$6f87
    6f84: 4c 79 6d     	jmp	$6d79
;   switch (key) {
    6f87: c9 08        	cmp	#$8
    6f89: d0 03        	bne	$6f8e
    6f8b: 4c 79 6d     	jmp	$6d79
    6f8e: c9 0a        	cmp	#$a
    6f90: d0 03        	bne	$6f95
    6f92: 4c 79 6d     	jmp	$6d79
    6f95: c9 0b        	cmp	#$b
    6f97: f0 59        	beq	$6ff2
    6f99: c9 15        	cmp	#$15
    6f9b: d0 03        	bne	$6fa0
    6f9d: 4c 79 6d     	jmp	$6d79
    6fa0: c9 43        	cmp	#$43
    6fa2: d0 03        	bne	$6fa7
    6fa4: 4c 55 70     	jmp	$7055
    6fa7: c9 54        	cmp	#$54
    6fa9: d0 03        	bne	$6fae
    6fab: 4c f1 70     	jmp	$70f1
    6fae: c9 52        	cmp	#$52
    6fb0: d0 03        	bne	$6fb5
    6fb2: 4c 11 71     	jmp	$7111
    6fb5: c9 4e        	cmp	#$4e
    6fb7: d0 03        	bne	$6fbc
    6fb9: 4c 95 6e     	jmp	$6e95
;       asm volatile ("JSR\t$FDDA" : "+a"(b));
    6fbc: 20 da fd     	jsr	$fdda
    6fbf: 4c 79 6d     	jmp	$6d79
;       Game::instance.SetCard(endLocation, cardToMove);
    6fc2: ad a9 77     	lda	$77a9
    6fc5: ae a8 77     	ldx	$77a8
    6fc8: 20 1e 6c     	jsr	$6c1e
    6fcb: a0 00        	ldy	#$0
    6fcd: 8c 90 76     	sty	$7690
    6fd0: a2 00        	ldx	#$0
    6fd2: 8e 91 76     	stx	$7691
    6fd5: a2 00        	ldx	#$0
    6fd7: 8a           	txa
    6fd8: f0 03        	beq	$6fdd
    6fda: 4c 79 6d     	jmp	$6d79
    6fdd: 98           	tya
    6fde: f0 03        	beq	$6fe3
    6fe0: 4c 79 6d     	jmp	$6d79
    6fe3: a2 01        	ldx	#$1
;   state = State::Idle;
    6fe5: 8e 6c 76     	stx	$766c
    6fe8: ca           	dex
    6fe9: 8e 6d 76     	stx	$766d
;   Cursor::instance.Show();
    6fec: 20 d0 64     	jsr	$64d0
    6fef: 4c 79 6d     	jmp	$6d79
;   CardLocation result = *this;
    6ff2: ae ba 77     	ldx	$77ba
    6ff5: 86 e4        	stx	$e4
;   bool IsColumn() const { return locationNumber>=5 && locationNumber <=251; }
    6ff7: e0 05        	cpx	#$5
    6ff9: b0 03        	bcs	$6ffe
    6ffb: 4c 33 71     	jmp	$7133
    6ffe: a6 e4        	ldx	$e4
;   bool IsColumn() const { return locationNumber>=5 && locationNumber <=251; }
    7000: e0 fc        	cpx	#$fc
    7002: 90 03        	bcc	$7007
    7004: 4c 33 71     	jmp	$7133
    7007: a6 e4        	ldx	$e4
    7009: 86 e2        	stx	$e2
;   return (locationNumber>>4) - 1;
    700b: 46 e2        	lsr	$e2
    700d: 46 e2        	lsr	$e2
    700f: 46 e2        	lsr	$e2
    7011: 46 e2        	lsr	$e2
    7013: a5 e2        	lda	$e2
;     switch (column)
    7015: 38           	sec
    7016: e9 04        	sbc	#$4
    7018: a4 e4        	ldy	$e4
    701a: c9 04        	cmp	#$4
    701c: a2 01        	ldx	#$1
    701e: b0 02        	bcs	$7022
    7020: a2 00        	ldx	#$0
    7022: 86 e3        	stx	$e3
    7024: a6 e2        	ldx	$e2
;   return (locationNumber>>4) - 1;
    7026: ca           	dex
    7027: a5 e4        	lda	$e4
;   return locationNumber & 0x0F;
    7029: 29 0f        	and	#$f
    702b: a4 e3        	ldy	$e3
    702d: d0 03        	bne	$7032
    702f: 4c 20 71     	jmp	$7120
    7032: 85 e3        	sta	$e3
    7034: a5 e2        	lda	$e2
;     switch (column)
    7036: 38           	sec
    7037: e9 08        	sbc	#$8
    7039: c9 03        	cmp	#$3
    703b: 90 0c        	bcc	$7049
    703d: a5 e2        	lda	$e2
;     switch (column)
    703f: 38           	sec
    7040: e9 01        	sbc	#$1
    7042: c9 03        	cmp	#$3
    7044: 90 03        	bcc	$7049
    7046: 4c 33 71     	jmp	$7133
    7049: a5 e3        	lda	$e3
    704b: d0 03        	bne	$7050
    704d: 4c 33 71     	jmp	$7133
    7050: a4 e3        	ldy	$e3
    7052: 4c 24 71     	jmp	$7124
;   CardLocation GetLocation() const { return location; }
    7055: ad ba 77     	lda	$77ba
    7058: aa           	tax
    7059: d0 03        	bne	$705e
    705b: 4c 79 6d     	jmp	$6d79
;   Card card = Game::instance.GetCard(location);
    705e: 20 18 6b     	jsr	$6b18
    7061: 85 fc        	sta	$fc
;   result.rank = (Rank)card.parts.rank;
    7063: 29 0f        	and	#$f
    7065: aa           	tax
    7066: d0 03        	bne	$706b
    7068: 4c 79 6d     	jmp	$6d79
    706b: a6 fc        	ldx	$fc
    706d: a8           	tay
    706e: a5 fc        	lda	$fc
;   result.suit = (Suit)card.parts.suit;
    7070: 29 30        	and	#$30
    7072: 85 e2        	sta	$e2
;   if (r<Rank::Ace || r>Rank::King)
    7074: c0 0d        	cpy	#$d
    7076: a2 01        	ldx	#$1
    7078: b0 02        	bcs	$707c
    707a: a2 00        	ldx	#$0
    707c: 86 e3        	stx	$e3
    707e: a5 fc        	lda	$fc
;   r = (Rank)((uint8_t)r + i);
    7080: 18           	clc
    7081: 69 01        	adc	#$1
    7083: a2 00        	ldx	#$0
    7085: a4 e3        	ldy	$e3
    7087: d0 03        	bne	$708c
    7089: 29 0f        	and	#$f
    708b: aa           	tax
    708c: 8a           	txa
;   card.parts.suit = (uint8_t)_card.suit;
    708d: 05 e2        	ora	$e2
;   CardLocation locationAboveTarget = Game::instance.GetCardLocation(card + 1);
    708f: 20 60 6b     	jsr	$6b60
;   bool IsColumn() const { return locationNumber>=5 && locationNumber <=251; }
    7092: c9 05        	cmp	#$5
    7094: b0 03        	bcs	$7099
    7096: 4c 79 6d     	jmp	$6d79
    7099: 85 fd        	sta	$fd
    709b: aa           	tax
;   bool IsColumn() const { return locationNumber>=5 && locationNumber <=251; }
    709c: c9 fc        	cmp	#$fc
    709e: 90 03        	bcc	$70a3
    70a0: 4c 79 6d     	jmp	$6d79
    70a3: a5 fd        	lda	$fd
;   return (locationNumber>>4) - 1;
    70a5: 4a           	lsr
    70a6: 4a           	lsr
    70a7: 4a           	lsr
    70a8: 4a           	lsr
    70a9: 18           	clc
    70aa: 69 ff        	adc	#$ff
;   if (columnIndex >= 10)
    70ac: c9 0a        	cmp	#$a
    70ae: 90 03        	bcc	$70b3
    70b0: 4c 79 6d     	jmp	$6d79
    70b3: a2 06        	ldx	#$6
    70b5: 86 e2        	stx	$e2
    70b7: a2 00        	ldx	#$0
    70b9: 86 e3        	stx	$e3
;   uint8_t GetCount() const { return count; }
    70bb: 20 19 73     	jsr	$7319
    70be: 85 e2        	sta	$e2
    70c0: 86 e3        	stx	$e3
;   uint8_t GetCount() const { return count; }
    70c2: a9 f7        	lda	#$f7
    70c4: 18           	clc
    70c5: 65 e2        	adc	$e2
    70c7: 85 e2        	sta	$e2
    70c9: a9 77        	lda	#$77
    70cb: 65 e3        	adc	$e3
    70cd: 85 e3        	sta	$e3
    70cf: a0 05        	ldy	#$5
    70d1: b1 e2        	lda	($e2),y
    70d3: 85 e2        	sta	$e2
    70d5: a5 fd        	lda	$fd
;   return locationNumber & 0x0F;
    70d7: 29 0f        	and	#$f
;     return columns[columnIndex].GetCount() == location.GetRow() + 1;
    70d9: 18           	clc
    70da: 69 01        	adc	#$1
;   if (!Game::instance.IsBottomOfColumn(locationAboveTarget))
    70dc: c5 e2        	cmp	$e2
    70de: f0 03        	beq	$70e3
    70e0: 4c 79 6d     	jmp	$6d79
    70e3: a5 fd        	lda	$fd
;   return CardLocation(((column + 1) << 4) | row);
    70e5: 29 f0        	and	#$f0
    70e7: 05 e2        	ora	$e2
    70e9: aa           	tax
    70ea: a5 fc        	lda	$fc
;   card.parts.suit = (uint8_t)_card.suit;
    70ec: 29 3f        	and	#$3f
    70ee: 4c 01 71     	jmp	$7101
;   CardLocation GetLocation() const { return location; }
    70f1: ad ba 77     	lda	$77ba
    70f4: aa           	tax
    70f5: d0 03        	bne	$70fa
    70f7: 4c 79 6d     	jmp	$6d79
;   Card card = Game::instance.GetCard(location);
    70fa: 20 18 6b     	jsr	$6b18
;   card.parts.suit = (uint8_t)_card.suit;
    70fd: 29 3f        	and	#$3f
;   CardAnimator::instance.StartAnimation(
    70ff: a2 ff        	ldx	#$ff
    7101: 20 04 60     	jsr	$6004
    7104: a2 02        	ldx	#$2
    7106: 8e 6c 76     	stx	$766c
    7109: a2 00        	ldx	#$0
    710b: 8e 6d 76     	stx	$766d
    710e: 4c 79 6d     	jmp	$6d79
;     drawing1.DrawBackground();
    7111: 20 1e 65     	jsr	$651e
;     drawing1.DrawGame();
    7114: 20 7a 67     	jsr	$677a
;       asm volatile ("STA\t$C054" : );
    7117: 8d 54 c0     	sta	$c054
;     Cursor::instance.Show();
    711a: 20 d0 64     	jsr	$64d0
    711d: 4c 79 6d     	jmp	$6d79
    7120: a8           	tay
    7121: f0 18        	beq	$713b
    7123: a8           	tay
    7124: 88           	dey
    7125: 84 e2        	sty	$e2
    7127: 8a           	txa
    7128: 0a           	asl
    7129: 0a           	asl
    712a: 0a           	asl
    712b: 0a           	asl
    712c: 18           	clc
    712d: 69 10        	adc	#$10
    712f: 05 e2        	ora	$e2
    7131: 85 e4        	sta	$e4
    7133: a5 e4        	lda	$e4
;   SetLocation(location.Up());
    7135: 20 f8 62     	jsr	$62f8
    7138: 4c 79 6d     	jmp	$6d79
;      return CardLocation(index ^ 0xFF); }
    713b: a9 03        	lda	#$3
    713d: 38           	sec
    713e: e5 e2        	sbc	$e2
    7140: 4c 31 71     	jmp	$7131
    7143: 00           	brk

00007144 <_ZN12StateMachine7NewGameEv>:
; void StateMachine::NewGame() {
    7144: a5 f4        	lda	$f4
    7146: 48           	pha
    7147: a5 f5        	lda	$f5
    7149: 48           	pha
    714a: a5 f6        	lda	$f6
    714c: 48           	pha
;   uint16_t GetNextGameSeed() { return ++gameSeed; }
    714d: ae 34 78     	ldx	$7834
    7150: ac 35 78     	ldy	$7835
    7153: e8           	inx
    7154: d0 01        	bne	$7157
    7156: c8           	iny
    7157: 8a           	txa
    7158: 48           	pha
    7159: 98           	tya
    715a: aa           	tax
    715b: 68           	pla
    715c: 85 f6        	sta	$f6
;   uint16_t GetNextGameSeed() { return ++gameSeed; }
    715e: 8d 34 78     	sta	$7834
    7161: 8c 35 78     	sty	$7835
    7164: a9 00        	lda	#$0
    7166: a8           	tay
    7167: 85 e3        	sta	$e3
;   result.card.parts.suit = cardNumber & 3;
    7169: 29 30        	and	#$30
    716b: 85 e2        	sta	$e2
    716d: 98           	tya
;   result.card.parts.rank = 1 + (cardNumber >> 2);
    716e: 4a           	lsr
    716f: 4a           	lsr
    7170: 18           	clc
    7171: 69 01        	adc	#$1
    7173: 29 0f        	and	#$f
    7175: 05 e2        	ora	$e2
;     deck[i] = CompactCard::FromOrdinal(i);
    7177: 99 bb 77     	sta	$77bb,y
;   for (uint8_t i=0; i < 52; ++i)
    717a: c8           	iny
    717b: 18           	clc
    717c: a5 e3        	lda	$e3
    717e: 69 10        	adc	#$10
    7180: c0 34        	cpy	#$34
    7182: d0 e3        	bne	$7167
    7184: a0 bb        	ldy	#$bb
    7186: 84 f4        	sty	$f4
    7188: a0 77        	ldy	#$77
    718a: 84 f5        	sty	$f5
    718c: 8a           	txa
;   Shuffle8(instruction >> 8);
    718d: 20 76 6a     	jsr	$6a76
    7190: a5 f6        	lda	$f6
;   Shuffle8((uint8_t)instruction);
    7192: 20 76 6a     	jsr	$6a76
    7195: a9 00        	lda	#$0
    7197: aa           	tax
    7198: 86 e6        	stx	$e6
    719a: 85 e2        	sta	$e2
    719c: a8           	tay
;     columns[column].Clear();
    719d: a9 f7        	lda	#$f7
    719f: 18           	clc
    71a0: 65 e2        	adc	$e2
    71a2: 85 e2        	sta	$e2
    71a4: a9 77        	lda	#$77
    71a6: 69 00        	adc	#$0
    71a8: 85 e3        	sta	$e3
    71aa: 84 e5        	sty	$e5
    71ac: a9 00        	lda	#$0
;   void Clear() { count = 0; }
    71ae: 99 fc 77     	sta	$77fc,y
    71b1: 85 e7        	sta	$e7
    71b3: a8           	tay
;    if (row >= 5) {
    71b4: c0 05        	cpy	#$5
    71b6: b0 16        	bcs	$71ce
    71b8: 84 e4        	sty	$e4
    71ba: a4 e7        	ldy	$e7
;       columns[column].Append(deck[cardIndex++]);
    71bc: b1 f4        	lda	($f4),y
    71be: a4 e4        	ldy	$e4
;    cards[row] = card;
    71c0: 91 e2        	sta	($e2),y
    71c2: a6 e5        	ldx	$e5
;    if (row >= count)
    71c4: bd fc 77     	lda	$77fc,x
    71c7: aa           	tax
    71c8: 86 e4        	stx	$e4
    71ca: c4 e4        	cpy	$e4
    71cc: 90 09        	bcc	$71d7
    71ce: c8           	iny
    71cf: 98           	tya
    71d0: a6 e5        	ldx	$e5
    71d2: 9d fc 77     	sta	$77fc,x
    71d5: 84 e4        	sty	$e4
    71d7: a6 e7        	ldx	$e7
;     for (uint8_t row=0; row < 5; ++row) {
    71d9: e0 04        	cpx	#$4
    71db: f0 08        	beq	$71e5
;       columns[column].Append(deck[cardIndex++]);
    71dd: e8           	inx
    71de: 86 e7        	stx	$e7
    71e0: a4 e4        	ldy	$e4
    71e2: 4c b4 71     	jmp	$71b4
    71e5: a5 f4        	lda	$f4
;   for (uint8_t column=0; column < 10; ++column) {
    71e7: 18           	clc
    71e8: 69 05        	adc	#$5
    71ea: 85 f4        	sta	$f4
    71ec: a5 f5        	lda	$f5
    71ee: 69 00        	adc	#$0
    71f0: 85 f5        	sta	$f5
    71f2: a6 e6        	ldx	$e6
    71f4: e8           	inx
    71f5: 18           	clc
    71f6: a5 e5        	lda	$e5
    71f8: 69 06        	adc	#$6
    71fa: e0 0a        	cpx	#$a
    71fc: f0 03        	beq	$7201
    71fe: 4c 98 71     	jmp	$7198
    7201: a0 00        	ldy	#$0
;   towers[0] = Card();
    7203: 8c f3 77     	sty	$77f3
;   towers[1] = deck[cardIndex++];
    7206: ae ed 77     	ldx	$77ed
    7209: 8e f4 77     	stx	$77f4
;   towers[2] = deck[cardIndex++];
    720c: ae ee 77     	ldx	$77ee
    720f: 8e f5 77     	stx	$77f5
;   towers[3] = Card();
    7212: 8c f6 77     	sty	$77f6
;   acePiles[0] = Card();
    7215: 8c ef 77     	sty	$77ef
    7218: 8c f0 77     	sty	$77f0
    721b: 8c f1 77     	sty	$77f1
    721e: 8c f2 77     	sty	$77f2
;   drawing1.DrawBackground();
    7221: 20 1e 65     	jsr	$651e
;   drawing1.DrawGame();
    7224: 20 7a 67     	jsr	$677a
;       asm volatile ("STA\t$C054" : );
    7227: 8d 54 c0     	sta	$c054
;   void CopyTo(Drawing *target) { hgr.CopyTo(target->hgr); }
    722a: ae 67 76     	ldx	$7667
    722d: a0 00        	ldy	#$0
    722f: 84 e2        	sty	$e2
    7231: 86 e3        	stx	$e3
;       uint8_t *src = (uint8_t *)(pageOffset << 8);
    7233: ae 68 76     	ldx	$7668
    7236: 84 e6        	sty	$e6
    7238: 86 e7        	stx	$e7
    723a: a2 f0        	ldx	#$f0
    723c: 86 e4        	stx	$e4
    723e: a2 20        	ldx	#$20
    7240: a5 e2        	lda	$e2
;          dest += 256;
    7242: 18           	clc
    7243: 69 00        	adc	#$0
    7245: 85 e5        	sta	$e5
    7247: a4 e3        	ldy	$e3
    7249: 84 e8        	sty	$e8
;       asm volatile (
    724b: a4 e4        	ldy	$e4
    724d: f0 0d        	beq	$725c
    724f: d0 04        	bne	$7255
    7251: b1 e6        	lda	($e6),y
    7253: 91 e2        	sta	($e2),y
    7255: 88           	dey
    7256: d0 f9        	bne	$7251
    7258: b1 e6        	lda	($e6),y
    725a: 91 e2        	sta	($e2),y
    725c: a4 e5        	ldy	$e5
    725e: 84 e2        	sty	$e2
    7260: a5 e3        	lda	$e3
;          dest += 256;
    7262: 69 01        	adc	#$1
    7264: 85 e3        	sta	$e3
    7266: a5 e6        	lda	$e6
;          src += 256;
    7268: 18           	clc
    7269: 69 00        	adc	#$0
    726b: 85 e6        	sta	$e6
    726d: a5 e7        	lda	$e7
;          src += 256;
    726f: 69 01        	adc	#$1
    7271: 85 e7        	sta	$e7
;       for (uint8_t i=0; i<32; ++i)
    7273: ca           	dex
    7274: d0 ca        	bne	$7240
    7276: a2 00        	ldx	#$0
;   state = State::Idle;
    7278: 8e 90 76     	stx	$7690
    727b: 8e 91 76     	stx	$7691
;     result = GetClosestColumnCardTo(start);
    727e: a9 5f        	lda	#$5f
    7280: 20 82 63     	jsr	$6382
    7283: aa           	tax
    7284: d0 05        	bne	$728b
;       result = GetClosestTowerCardTo(start);
    7286: a9 5f        	lda	#$5f
    7288: 20 06 64     	jsr	$6406
;   SetLocation(GetClosestCardTo(location));
    728b: 20 f8 62     	jsr	$62f8
    728e: a2 01        	ldx	#$1
    7290: 86 e2        	stx	$e2
    7292: a6 e2        	ldx	$e2
;     if (towers[i].GetRank() == Rank::Ace)
    7294: ca           	dex
;   Rank GetRank() const { return (Rank)card.parts.rank; }
    7295: a9 0f        	lda	#$f
    7297: 3d f3 77     	and	$77f3,x
;     if (towers[i].GetRank() == Rank::Ace)
    729a: c9 01        	cmp	#$1
    729c: f0 18        	beq	$72b6
    729e: a6 e2        	ldx	$e2
;   for (int i=0; i < 4; ++i) {
    72a0: e8           	inx
    72a1: 86 e2        	stx	$e2
;   for (int i=0; i < 4; ++i) {
    72a3: e0 05        	cpx	#$5
    72a5: d0 eb        	bne	$7292
    72a7: a2 01        	ldx	#$1
;   state = State::Idle;
    72a9: 8e 6c 76     	stx	$766c
    72ac: ca           	dex
    72ad: 8e 6d 76     	stx	$766d
;   Cursor::instance.Show();
    72b0: 20 d0 64     	jsr	$64d0
    72b3: 4c e9 72     	jmp	$72e9
;   Card card = Game::instance.GetCard(startLocation);
    72b6: 38           	sec
    72b7: a9 00        	lda	#$0
    72b9: e5 e2        	sbc	$e2
    72bb: 20 18 6b     	jsr	$6b18
    72be: 85 e2        	sta	$e2
;   result.rank = (Rank)card.parts.rank;
    72c0: 29 0f        	and	#$f
    72c2: 85 e3        	sta	$e3
    72c4: a5 e2        	lda	$e2
;   result.suit = (Suit)card.parts.suit;
    72c6: 4a           	lsr
    72c7: 4a           	lsr
    72c8: 4a           	lsr
    72c9: 4a           	lsr
    72ca: 29 03        	and	#$3
    72cc: 85 e2        	sta	$e2
    72ce: aa           	tax
;   card.parts.suit = (uint8_t)_card.suit;
    72cf: 06 e2        	asl	$e2
    72d1: 06 e2        	asl	$e2
    72d3: 06 e2        	asl	$e2
    72d5: 06 e2        	asl	$e2
    72d7: a5 e3        	lda	$e3
    72d9: 05 e2        	ora	$e2
;     return CardLocation(1 + (uint8_t)suit); }
    72db: e8           	inx
;   CardAnimator::instance.StartAnimation(
    72dc: 20 04 60     	jsr	$6004
    72df: a2 02        	ldx	#$2
;   state = State::MoveToAces;
    72e1: 8e 6c 76     	stx	$766c
    72e4: a2 00        	ldx	#$0
    72e6: 8e 6d 76     	stx	$766d
    72e9: 68           	pla
    72ea: 85 f6        	sta	$f6
    72ec: 68           	pla
    72ed: 85 f5        	sta	$f5
    72ef: 68           	pla
    72f0: 85 f4        	sta	$f4
; }
    72f2: 60           	rts

000072f3 <__mulqi3>:
    72f3: e0 00        	cpx	#$0
    72f5: f0 1f        	beq	$7316
    72f7: 85 e4        	sta	$e4
    72f9: 86 e2        	stx	$e2
    72fb: a2 00        	ldx	#$0
    72fd: 8a           	txa
    72fe: a8           	tay
    72ff: a5 e2        	lda	$e2
    7301: 29 01        	and	#$1
    7303: 86 e3        	stx	$e3
    7305: f0 04        	beq	$730b
    7307: a5 e4        	lda	$e4
    7309: 85 e3        	sta	$e3
    730b: 98           	tya
    730c: 18           	clc
    730d: 65 e3        	adc	$e3
    730f: 06 e4        	asl	$e4
    7311: 46 e2        	lsr	$e2
    7313: d0 e9        	bne	$72fe
    7315: 60           	rts
    7316: a9 00        	lda	#$0
    7318: 60           	rts

00007319 <__mulhi3>:
    7319: a4 e3        	ldy	$e3
    731b: d0 04        	bne	$7321
    731d: a4 e2        	ldy	$e2
    731f: f0 3c        	beq	$735d
    7321: 85 e7        	sta	$e7
    7323: 86 e4        	stx	$e4
    7325: a9 00        	lda	#$0
    7327: aa           	tax
    7328: 85 e8        	sta	$e8
    732a: a5 e2        	lda	$e2
    732c: 29 01        	and	#$1
    732e: a0 00        	ldy	#$0
    7330: 84 e5        	sty	$e5
    7332: 84 e6        	sty	$e6
    7334: d0 03        	bne	$7339
    7336: a8           	tay
    7337: f0 08        	beq	$7341
    7339: a4 e7        	ldy	$e7
    733b: 84 e5        	sty	$e5
    733d: a4 e4        	ldy	$e4
    733f: 84 e6        	sty	$e6
    7341: a5 e8        	lda	$e8
    7343: 18           	clc
    7344: 65 e5        	adc	$e5
    7346: a8           	tay
    7347: 8a           	txa
    7348: 65 e6        	adc	$e6
    734a: aa           	tax
    734b: 98           	tya
    734c: 06 e7        	asl	$e7
    734e: 26 e4        	rol	$e4
    7350: 46 e3        	lsr	$e3
    7352: 66 e2        	ror	$e2
    7354: a4 e3        	ldy	$e3
    7356: d0 d0        	bne	$7328
    7358: a4 e2        	ldy	$e2
    735a: d0 cc        	bne	$7328
    735c: 60           	rts
    735d: a9 00        	lda	#$0
    735f: aa           	tax
    7360: 60           	rts
